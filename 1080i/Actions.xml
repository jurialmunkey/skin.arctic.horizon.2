<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Action_SkinShortcuts_ContentType_AutoSetOnFocus">
        <onfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customProperty,widgetTarget)</onfocus>
        <onfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customValue,$VAR[Action_SkinShortcuts_ContentType])</onfocus>
        <onfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SendClick(404)</onfocus>
    </include>
    <include name="Action_SkinShortcuts_ContentType_AutoSetOnUnFocus">
        <onunfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customProperty,widgetTarget)</onunfocus>
        <onunfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customValue,$VAR[Action_SkinShortcuts_ContentType])</onunfocus>
        <onunfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SendClick(404)</onunfocus>
    </include>

    <variable name="Action_SkinShortcuts_ContentType">
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Video)">videos</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Music)">music</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Program)">programs</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Picture)">pictures</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,PVR)">tvguide</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Videos)">videos</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Music)">music</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Programs)">programs</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Pictures)">pictures</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),pvr://)">tvguide</value>
    </variable>

    <variable name="Action_Query_Params">

        <!-- Movie -->
        <value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.UniqueID(tmdb))">tmdb_type=movie$COMMAtmdb_id=$INFO[Container.ListItem.UniqueID(tmdb)]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.UniqueID(imdb))">tmdb_type=movie$COMMAimdb_id=$INFO[Container.ListItem.UniqueID(imdb)]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.Property(imdb_id))">tmdb_type=movie$COMMAimdb_id=$INFO[Container.ListItem.Property(imdb_id)]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.IMDBNumber) + String.StartsWith(Container.ListItem.IMDBNumber,tt)">tmdb_type=movie$COMMAimdb_id=$INFO[Container.ListItem.IMDBNumber]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.Title)">tmdb_type=movie$COMMAquery=$INFO[Container.ListItem.Title]$INFO[Container.ListItem.Year,$COMMAyear=,]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.Label)">tmdb_type=movie$COMMAquery=$INFO[Container.ListItem.Label]$INFO[Container.ListItem.Year,$COMMAyear=,]</value>

        <!-- TVShow -->
        <value condition="String.IsEqual(Container.ListItem.DBType,tvshow) + !String.IsEmpty(Container.ListItem.UniqueID(tmdb))">tmdb_type=tv$COMMAtmdb_id=$INFO[Container.ListItem.UniqueID(tmdb)]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,tvshow) + !String.IsEmpty(Container.ListItem.Title)">tmdb_type=tv$COMMAquery=$INFO[Container.ListItem.Title]$INFO[Container.ListItem.Year,$COMMAyear=,]$INFO[Container.ListItem.UniqueID(tvdb),$COMMAtvdb_id=,]$INFO[Container.ListItem.UniqueID(imdb),$COMMAimdb_id=,]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,tvshow) + !String.IsEmpty(Container.ListItem.Label)">tmdb_type=tv$COMMAquery=$INFO[Container.ListItem.Label]$INFO[Container.ListItem.Year,$COMMAyear=,]$INFO[Container.ListItem.UniqueID(tvdb),$COMMAtvdb_id=,]$INFO[Container.ListItem.UniqueID(imdb),$COMMAimdb_id=,]</value>

        <!-- Season -->
        <value condition="String.IsEqual(Container.ListItem.DBType,season) + !String.IsEmpty(Container.ListItem.UniqueID(tvshow.tmdb))">tmdb_type=tv$COMMAtmdb_id=$INFO[Container.ListItem.UniqueID(tvshow.tmdb)]$INFO[Container.ListItem.Season,$COMMAseason=,]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,season) + !String.IsEmpty(Container.ListItem.TvShowTitle)">tmdb_type=tv$COMMAquery=$INFO[Container.ListItem.TvShowTitle]$INFO[Container.ListItem.Year,$COMMAepisode_year=,]$INFO[Container.ListItem.Season,$COMMAseason=,]</value>

        <!-- Episode -->
        <value condition="String.IsEqual(Container.ListItem.DBType,episode) + !String.IsEmpty(Container.ListItem.UniqueID(tvshow.tmdb))">tmdb_type=tv$COMMAtmdb_id=$INFO[Container.ListItem.UniqueID(tvshow.tmdb)]$INFO[Container.ListItem.Season,$COMMAseason=,]$INFO[Container.ListItem.Episode,$COMMAepisode=,]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,episode) + !String.IsEmpty(Container.ListItem.TvShowTitle)">tmdb_type=tv$COMMAquery=$INFO[Container.ListItem.TvShowTitle]$INFO[Container.ListItem.Year,$COMMAepisode_year=,]$INFO[Container.ListItem.Season,$COMMAseason=,]$INFO[Container.ListItem.Episode,$COMMAepisode=,]</value>

        <!-- People -->
        <value condition="String.IsEqual(Container.ListItem.Property(item.type),person) + !String.IsEmpty(Container.ListItem.Property(tmdb_id))">tmdb_type=person$COMMAtmdb_id=$INFO[Container.ListItem.Property(tmdb_id)]</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,actor) | String.IsEqual(Container.ListItem.DBType,director)] + !String.IsEmpty(Container.ListItem.Label)">tmdb_type=person$COMMAquery=$INFO[Container.ListItem.Label]$INFO[Container.ListItem.UniqueID(tmdb),$COMMAtmdb_id=,]</value>

    </variable>


    <include name="_Action_OSD_EpisodeList_OnUnFocus_XX">
        <onright condition="!String.IsEmpty(Container(6401).ListItemAbsolute($PARAM[pos]).Title) + String.IsEqual(Container(6401).ListItemAbsolute($PARAM[pos]).Title,Player.Title)">SetFocus(6401,$PARAM[pos],absolute)</onright>
        <onleft condition="!String.IsEmpty(Container(6401).ListItemAbsolute($PARAM[pos]).Title) + String.IsEqual(Container(6401).ListItemAbsolute($PARAM[pos]).Title,Player.Title)">SetFocus(6401,$PARAM[pos],absolute)</onleft>
        <onback condition="!String.IsEmpty(Container(6401).ListItemAbsolute($PARAM[pos]).Title) + String.IsEqual(Container(6401).ListItemAbsolute($PARAM[pos]).Title,Player.Title)">SetFocus(6401,$PARAM[pos],absolute)</onback>
    </include>

    <include name="_Action_OSD_EpisodeList_OnUnFocus_X0">
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]0" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]1" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]2" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]3" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]4" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]5" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]6" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]7" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]8" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_XX"><param name="pos" value="$PARAM[ten]9" /></include>
    </include>

    <include name="Action_OSD_EpisodeList_OnUnFocus">
        <include content="_Action_OSD_EpisodeList_OnUnFocus_X0"><param name="ten" value="0" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_X0"><param name="ten" value="1" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_X0"><param name="ten" value="2" /></include>
        <include content="_Action_OSD_EpisodeList_OnUnFocus_X0"><param name="ten" value="3" /></include>
    </include>


    <include name="_Action_OSD_EpisodeList_Refocus_XX">
        <onfocus condition="!Integer.IsEqual(Container(6401).NumItems,0) + String.IsEmpty(Window.Property(Refocusing)) + !String.IsEmpty(Container(6401).ListItemAbsolute($PARAM[pos]).Title) + String.IsEqual(Container(6401).ListItemAbsolute($PARAM[pos]).Title,Player.Title)">SetFocus(6401,$PARAM[pos],absolute)</onfocus>
        <onup condition="!Integer.IsEqual(Container(6401).NumItems,0) + !String.IsEmpty(Container(6401).ListItemAbsolute($PARAM[pos]).Title) + String.IsEqual(Container(6401).ListItemAbsolute($PARAM[pos]).Title,Player.Title)">SetFocus(6401,$PARAM[pos],absolute)</onup>
        <ondown condition="!Integer.IsEqual(Container(6401).NumItems,0) + !String.IsEmpty(Container(6401).ListItemAbsolute($PARAM[pos]).Title) + String.IsEqual(Container(6401).ListItemAbsolute($PARAM[pos]).Title,Player.Title)">SetFocus(6401,$PARAM[pos],absolute)</ondown>
    </include>

    <include name="_Action_OSD_EpisodeList_Refocus_X0">
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]0" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]1" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]2" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]3" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]4" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]5" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]6" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]7" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]8" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_XX"><param name="pos" value="$PARAM[ten]9" /></include>
    </include>

    <include name="Action_OSD_EpisodeList_Refocus">
        <include content="_Action_OSD_EpisodeList_Refocus_X0"><param name="ten" value="0" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_X0"><param name="ten" value="1" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_X0"><param name="ten" value="2" /></include>
        <include content="_Action_OSD_EpisodeList_Refocus_X0"><param name="ten" value="3" /></include>
        <onfocus condition="!Integer.IsEqual(Container(6401).NumItems,0) + String.IsEmpty(Window.Property(Refocusing))">SetProperty(Refocusing,1)</onfocus>
        <onfocus condition="!Integer.IsEqual(Container(6401).NumItems,0) + String.IsEmpty(Window.Property(Refocusing))">SetFocus(6400)</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(Refocusing))">ClearProperty(Refocusing)</onfocus>
    </include>


    <include name="Action_OSD_Button_OnFocus">
        <onfocus condition="!String.IsEmpty(Skin.String(OSD_Timeout))">AlarmClock(osd_timeout,SetFocus(99997),$INFO[Skin.String(OSD_Timeout),00:,],silent)</onfocus>
        <onunfocus>CancelAlarm(osd_timeout,true)</onunfocus>
    </include>


    <include name="Action_OptionsMenu_Default">
        <param name="id" default="50" />
        <definition>
            <onleft>$PARAM[id]</onleft>
            <onright>$PARAM[id]</onright>
            <onback>$PARAM[id]</onback>
        </definition>
    </include>

    <include name="Action_OptionsMenu_HomeWrap">
        <definition>
            <onleft condition="Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300,9999,absolute)</onleft>
            <onright condition="Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300,0,absolute)</onright>
            <onback condition="Skin.HasSetting(Home.DisableSearchMenu)">300</onback>
            <onback condition="!Skin.HasSetting(Home.DisableSearchMenu)">300</onback>
            <onleft condition="!Skin.HasSetting(Home.DisableSearchMenu)">300</onleft>
            <onright condition="!Skin.HasSetting(Home.DisableSearchMenu)">300</onright>
        </definition>
    </include>

    <include name="Action_OptionsMenu_PVRGuide">
        <onleft>10</onleft>
        <onright>10</onright>
    </include>

    <include name="Action_OptionsMenu_ButtonMenu">
        <onleft>Close</onleft>
        <onright>Close</onright>
    </include>

    <include name="Action_Row_OnDown">
        <ondown condition="$EXP[Exp_AlphabetTypes_Only] + !Skin.HasSetting(DisableAlphabetScrollbar)">65</ondown>
        <ondown condition="!$EXP[Exp_AlphabetTypes_Only] | Skin.HasSetting(DisableAlphabetScrollbar)">60</ondown>
    </include>

    <include name="Action_Row_Recommendations_OnDown">
        <ondown>SetFocus(99996)</ondown>
    </include>

    <include name="Action_Row_WallView_OnDown">
        <ondown condition="[Container.HasNext | Container.HasPrevious] + [Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(57)]">SetProperty(WallMode,$INFO[Container.FolderPath])</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(50)">SetFocus(506)</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(51)">SetFocus(516)</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(52)">SetFocus(526)</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(57)">SetFocus(576)</ondown>
    </include>

    <include name="Action_ClearContext_OnUnload">
        <onunload>ClearProperty(ContextMenu.Label,Home)</onunload>
        <onunload>ClearProperty(ContextMenu.Fanart,Home)</onunload>
        <onunload>ClearProperty(ContextMenu.Poster,Home)</onunload>
        <onunload>ClearProperty(ContextMenu.Icon,Home)</onunload>
    </include>

    <include name="Action_Widget_Refocus_Click">
        <onclick>SetFocus(5004)</onclick>
        <onclick>SetFocus(5003)</onclick>
        <onclick>SetFocus(5002)</onclick>
        <onclick>SetFocus(5001)</onclick>
        <onclick>SetFocus(5000)</onclick>
    </include>

    <include name="Action_Widget_Click">
        <include>Action_Widget_Refocus_Click</include>
        <onclick>SetProperty(TMDbHelper.HideView,1,Home)</onclick>
        <onclick>Close</onclick>
        <onclick>AlarmClock(callinfo,RunScript(plugin.video.themoviedb.helper,add_path=$INFO[Container($PARAM[id]).ListItem.FolderPath],call_auto=1190),00:01,silent)</onclick>
    </include>

    <include name="Action_Widget_Play_Click">
        <include>Action_Widget_Refocus_Click</include>
        <onclick>Close</onclick>
        <onclick condition="!Window.IsVisible(MyVideoNav.xml)">AlarmClock(callinfo,RunScript(plugin.video.themoviedb.helper,close_dialog=1190,call_path=$INFO[Container($PARAM[id]).ListItem.FolderPath]),00:01,silent)</onclick>
        <onclick condition="Window.IsVisible(MyVideoNav.xml)">AlarmClock(callinfo,RunScript(plugin.video.themoviedb.helper,close_dialog=1190,call_update=$INFO[Container($PARAM[id]).ListItem.FolderPath]),00:01,silent)</onclick>
    </include>

    <include name="Action_Widget_TrailerPlay_Click">
        <onclick>Close</onclick>
        <onclick condition="$EXP[Exp_InfoDialogs]">PlayMedia($INFO[Container($PARAM[id]).ListItem.FolderPath],False,1)</onclick>
        <onclick condition="!$EXP[Exp_InfoDialogs]">PlayMedia($INFO[Container($PARAM[id]).ListItem.FolderPath],False)</onclick>
        <onclick condition="$EXP[Exp_InfoDialogs]">SetProperty(HasTrailer,$INFO[Container($PARAM[id]).ListItem.FolderPath],Home)</onclick>
        <onclick condition="$EXP[Exp_InfoDialogs]">AlarmClock(Refocus,SetFocus(7001),00:01,silent)</onclick>
    </include>

    <include name="Action_Plotbox_OnUp">
        <param name="fanart" default="$ESCINFO[ListItem.Art(fanart)]" />
        <param name="poster" default="$ESCINFO[ListItem.Art(poster)]" />
        <definition>
            <onup>SetProperty(Fanart,$PARAM[fanart],1113)</onup>
            <onup>SetProperty(Poster,$PARAM[poster],1113)</onup>
            <onup>SetProperty(Title,"$VAR[Label_Title]",1113)</onup>
            <onup>SetProperty(Year,$ESCINFO[ListItem.Year],1113)</onup>
            <onup>SetProperty(ClearLogo,$ESCINFO[Window(Home).Property(TMDbHelper.ListItem.CropImage)],1113)</onup>
            <onup>SetProperty(Tagline,$ESCINFO[ListItem.Tagline],1113)</onup>
            <onup>SetProperty(Plot,$VAR[Label_Plot_ESC],1113)</onup>
            <onup>ActivateWindow(1113)</onup>
        </definition>
    </include>

    <include name="Action_Recommendations_OnFocus">
        <onfocus>SetProperty(Path.Cast,"$VAR[Path_Cast]",1120)</onfocus>
        <onfocus>SetProperty(Path.Crew,"$VAR[Path_Crew]",1120)</onfocus>
        <onfocus>SetProperty(Path.Recommendations,"$VAR[Path_Recommendations]",1120)</onfocus>
        <onfocus>SetProperty(Path.Similar,"$VAR[Path_Similar]",1120)</onfocus>
        <onfocus>SetProperty(Path.FromYear,"$VAR[Path_FromYear]",1120)</onfocus>
        <onfocus>SetProperty(Path.FromGenre,"$VAR[Path_FromGenre]",1120)</onfocus>
        <onfocus>SetProperty(Path.FromStudio,"$VAR[Path_FromStudio]",1120)</onfocus>
        <onfocus>SetProperty(Path.FromDirector,"$VAR[Path_FromDirector]",1120)</onfocus>
        <onfocus>SetProperty(Path.FromWriter,"$VAR[Path_FromWriter]",1120)</onfocus>
        <onfocus>SetProperty(Path.FromCollection,"$VAR[Path_FromCollection]",1120)</onfocus>
        <onfocus>SetProperty(Path.Seasons,"$VAR[Path_Seasons]",1120)</onfocus>
        <onfocus>SetProperty(Path.UpNext,"$VAR[Path_UpNext]",1120)</onfocus>
        <onfocus>SetProperty(Path.Youtube,"$VAR[Path_Youtube]",1120)</onfocus>
        <onfocus>SetProperty(Path.Reviews,"$VAR[Path_Reviews]",1120)</onfocus>
        <onfocus>SetProperty(Path.Keywords,"$VAR[Path_Keywords]",1120)</onfocus>

        <onfocus>SetProperty(Path.CastInMovies,"$VAR[Path_CastInMovies]",1120)</onfocus>
        <onfocus>SetProperty(Path.CastInShows,"$VAR[Path_CastInShows]",1120)</onfocus>
        <onfocus>SetProperty(Path.CrewInMovies,"$VAR[Path_CrewInMovies]",1120)</onfocus>
        <onfocus>SetProperty(Path.CrewInShows,"$VAR[Path_CrewInShows]",1120)</onfocus>

        <onfocus>SetProperty(Path.Posters,"$VAR[Path_Posters]",1120)</onfocus>
        <onfocus>SetProperty(Path.Fanart,"$VAR[Path_Fanart]",1120)</onfocus>

        <onfocus>SetProperty(Collection,$ESCINFO[ListItem.Set],1120)</onfocus>
        <onfocus>SetProperty(Director,$ESCINFO[ListItem.Director],1120)</onfocus>
        <onfocus>SetProperty(Writer,$VAR[Path_FromWriter_Screenplay],1120)</onfocus>
        <onfocus>SetProperty(Genre,$ESCINFO[ListItem.Genre],1120)</onfocus>
        <onfocus>SetProperty(Studio,$ESCINFO[Window(Home).Property(TMDBHelper.ListItem.Studio.1.Name)],1120)</onfocus>
        <onfocus>SetProperty(Year,$ESCINFO[ListItem.Year],1120)</onfocus>
        <onfocus>SetProperty(Fanart,$ESCINFO[ListItem.Art(fanart)],1120)</onfocus>
        <onfocus>SetProperty(Title,"$VAR[Label_Title]",1120)</onfocus>

        <onfocus>SetProperty(CropLogo,$ESCINFO[Window(Home).Property(TMDBHelper.ListItem.CropImage)],1120)</onfocus>

        <nested />

        <onfocus condition="String.IsEqual(ListItem.DBtype,movie) | String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,season) | String.IsEqual(ListItem.DBtype,episode) | String.IsEqual(ListItem.DBtype,set) | $EXP[Exp_IsPersonInfo]">ActivateWindow(1120)</onfocus>
    </include>

    <include name="Action_Settings_Onload">
        <onload condition="Window.IsActive(skinsettings)">SetFocus(30001)</onload>
        <onload condition="Window.IsActive(interfacesettings)">SetFocus(30002)</onload>
        <onload condition="Window.IsActive(mediasettings)">SetFocus(30003)</onload>
        <onload condition="Window.IsActive(playersettings)">SetFocus(30004)</onload>
        <onload condition="Window.IsActive(systemsettings)">SetFocus(30005)</onload>
        <onload condition="Window.IsActive(servicesettings)">SetFocus(30006)</onload>
        <onload condition="Window.IsActive(pvrsettings)">SetFocus(30007)</onload>
        <onload condition="Window.IsActive(systeminfo)">SetFocus(30008)</onload>
        <onload condition="Window.IsActive(profiles)">SetFocus(30009)</onload>
    </include>


    <include name="Action_Blur_Onload">
        <param name="sourceimage" default="Art(fanart)" />
        <definition>
            <onload>ClearProperty(TMDbHelper.WidgetContainer,Home)</onload>
            <onload>SetProperty(TMDbHelper.Blur.SourceImage,$PARAM[sourceimage],Home)</onload>
            <onload>SetProperty(TMDbHelper.Blur.Fallback,special://skin/fanart.jpg,Home)</onload>
        </definition>
    </include>

    <include name="Action_BuildTextures_Onload">
        <onload>RunScript(script.texturemaker,bg=$VAR[ColorHighlight],fg=$VAR[ColorGradient],alpha=1.0,folder=ArcticHorizon,selectbox=special://skin/extras/textures/selectbox.png,scrollv=special://skin/extras/textures/scrollv.png,scrollh=special://skin/extras/textures/scrollh.png,box=special://skin/extras/textures/box.png,button+multiply=special://skin/extras/textures/button.png,circle=special://skin/extras/textures/circle.png,menu=special://skin/extras/textures/menu.png,menuright+overlay+slicing{right|80}=special://skin/extras/textures/menuright.png,menusquareright+overlay+slicing{right|80}=special://skin/extras/textures/menusquareright.png,main=special://skin/extras/textures/main.png,no_reload)</onload>
    </include>
    <include name="Action_BuildTextures_Onclick">
        <onclick condition="!String.IsEqual(Window(Home).Property(ColorPicker_Type),Indicator)">runscript(script.texturemaker,bg=$VAR[ColorHighlight],fg=$VAR[ColorGradient],alpha=1.0,folder=ArcticHorizon,selectbox=special://skin/extras/textures/selectbox.png,scrollv=special://skin/extras/textures/scrollv.png,scrollh=special://skin/extras/textures/scrollh.png,box=special://skin/extras/textures/box.png,button+multiply=special://skin/extras/textures/button.png,circle=special://skin/extras/textures/circle.png,menu=special://skin/extras/textures/menu.png,menuright+overlay+slicing{right|80}=special://skin/extras/textures/menuright.png,menusquareright+overlay+slicing{right|80}=special://skin/extras/textures/menusquareright.png,main=special://skin/extras/textures/main.png,reload=1111)</onclick>
    </include>
    <include name="Action_BuildTextures_Onclick_Preset">
        <onclick>runscript(script.texturemaker,bg=$VAR[ColorHighlight],fg=$VAR[ColorGradient],alpha=1.0,folder=ArcticHorizon,selectbox=special://skin/extras/textures/selectbox.png,scrollv=special://skin/extras/textures/scrollv.png,scrollh=special://skin/extras/textures/scrollh.png,box=special://skin/extras/textures/box.png,button+multiply=special://skin/extras/textures/button.png,circle=special://skin/extras/textures/circle.png,menu=special://skin/extras/textures/menu.png,menuright+overlay+slicing{right|80}=special://skin/extras/textures/menuright.png,menusquareright+overlay+slicing{right|80}=special://skin/extras/textures/menusquareright.png,main=special://skin/extras/textures/main.png,reload=1115)</onclick>
    </include>
</includes>