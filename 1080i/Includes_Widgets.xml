<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Widget_Label">
        <param name="usewidgetlabel">false</param>
        <param name="infowidget">false</param>
        <param name="labelvisible">true</param>
        <param name="infowidget_full">false</param>
        <param name="divider_h">400</param>
        <definition>
            <control type="group" id="$PARAM[groupid]">
                <nested />
                <top>widget_label_t</top>
                <height>widget_label_h</height>
                <left>80</left>
                <right>80</right>
                <visible>$PARAM[visible]</visible>

                <control type="label">
                    <top>30</top>
                    <height>30</height>
                    <aligny>center</aligny>
                    <textcolor>main_fg_30</textcolor>
                    <include content="Object_Label" condition="$PARAM[usewidgetlabel]">
                        <param name="label">[CAPITALIZE]$INFO[Container($PARAM[id]).ListItem.Property(widget)][/CAPITALIZE]</param>
                    </include>
                    <label>$PARAM[label]</label>
                    <font>font_small_bold</font>
                    <visible>!Control.HasFocus($PARAM[id])</visible>
                    <visible>$PARAM[labelvisible]</visible>
                </control>
                <control type="label">
                    <top>20</top>
                    <height>40</height>
                    <aligny>center</aligny>
                    <textcolor>main_fg_100</textcolor>
                    <include content="Object_Label" condition="$PARAM[usewidgetlabel]">
                        <param name="label">[CAPITALIZE]$INFO[Container($PARAM[id]).ListItem.Property(widget)][/CAPITALIZE]</param>
                    </include>
                    <label>$PARAM[label]</label>
                    <font>font_medium_bold</font>
                    <visible>Control.HasFocus($PARAM[id])</visible>
                    <visible>$PARAM[labelvisible]</visible>
                    <visible>![$PARAM[infowidget_full]] | !Skin.HasSetting(Widgets.ExpandedHeader)</visible>
                </control>



                <include content="Object_Control" condition="$PARAM[infowidget]">
                    <param name="control">group</param>
                    <visible>Control.HasFocus($PARAM[id]) + !Integer.IsEqual(Container($PARAM[id]).NumItems,0)</visible>
                    <animation effect="fade" start="0" end="100" delay="200" time="400" reversible="false">Visible</animation>

                    <!-- Info Widget Top -->
                    <include content="Object_Control" condition="$PARAM[infowidget_full]">
                        <param name="control">group</param>
                        <animation effect="slide" end="0,infowidget_full_t" condition="true">Conditional</animation>
                        <include content="Info_Panel" condition="!Skin.HasSetting(Widgets.ExpandedHeader)">
                            <param name="container">Container($PARAM[id]).</param>
                            <param name="line_id">0</param>
                            <param name="controltype">label</param>
                            <param name="plotheight">info_plot_small_h</param>
                            <width>info_panel_w</width>
                            <height>280</height>
                        </include>
                        <include content="Info_Panel" condition="Skin.HasSetting(Widgets.ExpandedHeader)">
                            <param name="container">Container($PARAM[id]).</param>
                            <param name="line_id">0</param>
                            <param name="controltype">label</param>
                            <width>info_panel_w</width>
                            <height>280</height>
                        </include>
                    </include>

                    <!-- Info Widget Bottom -->
                    <include content="Object_Control" condition="!$PARAM[infowidget_full]">
                        <param name="control">group</param>
                        <top>infowidget_plot_t</top>
                        <include content="Info_Panel">
                            <param name="title">false</param>
                            <param name="infoline">false</param>
                            <param name="container">Container($PARAM[id]).</param>
                            <param name="details">true</param>
                            <param name="line_id">0</param>
                            <param name="controltype">label</param>
                            <param name="plotbox">true</param>
                            <param name="plotheight">info_plot_h</param>
                            <param name="plotlabel">[COLOR=main_fg_90]$VAR[Label_Plot_Widget_Title,[B],[/B]][/COLOR]$VAR[Label_Plot_Widget]</param>
                            <width>info_panel_w</width>
                            <height>160</height>
                        </include>
                    </include>
                </include>
                <control type="group">
                    <top>80</top>
                    <height>280</height>
                    <visible>$PARAM[busy_visible]</visible>
                    <animation type="Visible" reversible="false">
                        <effect type="fade" start="0" end="100" time="400" delay="600"/>
                    </animation>
                    <include content="Object_BusySpinner">
                        <param name="colordiffuse">main_fg</param>
                        <param name="label">$LOCALIZE[31023] $PARAM[label]</param>
                        <param name="spinspinner">$PARAM[busy_visible]</param>
                    </include>
                </control>
            </control>
        </definition>
    </include>

    <include name="Widget_SlideAnimation">
        <param name="infowidget_full">false</param>
        <definition>


            <animation effect="fade" time="300" start="100" end="0" reversible="false" condition="!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsGreater(Window(Home).Property(Slide.WidgetContainer),$PARAM[id]) + String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full) + Skin.HasSetting(Widgets.ExpandedHeader)">Conditional</animation>
            <animation effect="fade" time="300" start="0" end="100" reversible="false" condition="![!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsGreater(Window(Home).Property(Slide.WidgetContainer),$PARAM[id]) + String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full) + Skin.HasSetting(Widgets.ExpandedHeader)]">Conditional</animation>

            <animation effect="fade" time="300" start="100" end="0" reversible="false" condition="[[!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsLess(Window(Home).Property(Slide.WidgetContainer),$PARAM[id])] | [Integer.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),301) + !Integer.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),$PARAM[id])]] + String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full) + Skin.HasSetting(Widgets.ExpandedFooter)">Conditional</animation>
            <animation effect="fade" time="300" start="0" end="100" reversible="false" condition="![[[!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsLess(Window(Home).Property(Slide.WidgetContainer),$PARAM[id])] | [Integer.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),301) + !Integer.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),$PARAM[id])]] + String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full) + Skin.HasSetting(Widgets.ExpandedFooter)]">Conditional</animation>

            <animation effect="slide" time="400" tween="quadratic" start="0" end="0,infowidget_next_t" reversible="false" condition="!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsLess(Window(Home).Property(Slide.WidgetContainer),$PARAM[id]) + !String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full)">Conditional</animation>
            <animation effect="slide" time="400" tween="quadratic" end="0" start="0,infowidget_next_t" reversible="false" condition="![!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsLess(Window(Home).Property(Slide.WidgetContainer),$PARAM[id]) + !String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full)]">Conditional</animation>

            <animation effect="slide" time="400" tween="quadratic" start="0" end="0,infowidget_mext_t" reversible="false" condition="!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsLess(Window(Home).Property(Slide.WidgetContainer),$PARAM[id]) + String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full)">Conditional</animation>
            <animation effect="slide" time="400" tween="quadratic" end="0" start="0,infowidget_mext_t" reversible="false" condition="![!Integer.IsEqual(Window(Home).Property(Slide.WidgetContainer),0) + Integer.IsLess(Window(Home).Property(Slide.WidgetContainer),$PARAM[id]) + String.IsEqual(Window(Home).Property(Slide.WidgetInfoStyle),Full)]">Conditional</animation>

            <animation effect="slide" time="400" tween="quadratic" start="0" end="0,infowidget_main_t" reversible="false" condition="$PARAM[infowidget_full] + Control.HasFocus($PARAM[id])">Conditional</animation>
            <animation effect="slide" time="400" tween="quadratic" end="0" start="0,infowidget_main_t" reversible="false" condition="$PARAM[infowidget_full] + !Control.HasFocus($PARAM[id])">Conditional</animation>
        </definition>
    </include>

    <include name="Widget_Poster">
        <param name="visible">true</param>
        <param name="altvisible">false</param>
        <param name="include">List_Poster_Row</param>
        <param name="busy_visible">true</param>
        <param name="busy_isupdating">false</param>
        <param name="usewidgetlabel">false</param>
        <param name="infowidget">false</param>
        <param name="height">widget_items_h</param>
        <definition>
            <include content="Widget_Label">
                <param name="groupid">$PARAM[groupid]</param>
                <param name="label">$PARAM[label]</param>
                <param name="id">$PARAM[id]</param>
                <param name="visible">[Container($PARAM[id]).IsUpdating | !Integer.IsEqual(Container($PARAM[id]).NumItems,0) | $PARAM[altvisible]] + $PARAM[visible]</param>
                <param name="busy_visible">[Container($PARAM[id]).IsUpdating | $PARAM[busy_isupdating]] + $PARAM[busy_visible]</param>
                <param name="usewidgetlabel">$PARAM[usewidgetlabel]</param>
                <param name="infowidget">$PARAM[infowidget]</param>
                <param name="infowidget_full">$PARAM[infowidget_full]</param>
                <param name="labelvisible">$PARAM[labelvisible]</param>
                <param name="divider_h">$PARAM[divider_h]</param>
                <include content="Widget_SlideAnimation">
                    <param name="infowidget_full">$PARAM[infowidget_full]</param>
                    <param name="infowidget">$PARAM[infowidget]</param>
                    <param name="id">$PARAM[id]</param>
                </include>
                <animation effect="fade" start="100" end="0" time="400" reversible="false">Hidden</animation>
            </include>
            <include content="$PARAM[include]">
                <param name="id">$PARAM[id]</param>
                <param name="context_button">true</param>
                <param name="icon">$PARAM[icon]</param>
                <param name="detailed">$PARAM[detailed]</param>
                <param name="item_h">$PARAM[item_h]</param>
                <param name="itemlayout_h">$PARAM[itemlayout_h]</param>
                <param name="item_w">$PARAM[item_w]</param>
                <param name="itemlayout_w">$PARAM[itemlayout_w]</param>
                <nested />
                <include content="Object_HitRect" condition="![$PARAM[infowidget]]">
                    <param name="x">0</param>
                    <param name="y">360</param>
                    <param name="w">1920</param>
                    <param name="h">360</param>
                </include>
                <include content="Object_HitRect" condition="$PARAM[infowidget]">
                    <param name="x">0</param>
                    <param name="y">-180</param>
                    <param name="w">1920</param>
                    <param name="h">1280</param>
                </include>

                <top>widget_items_t</top>
                <height>$PARAM[height]</height>
                <animation effect="fade" start="100" end="0" time="0" condition="Container($PARAM[id]).IsUpdating + $PARAM[busy_visible]">Conditional</animation>
                <visible>[Container($PARAM[id]).IsUpdating | !Integer.IsEqual(Container($PARAM[id]).NumItems,0) | $PARAM[altvisible]]</visible>
                <visible>$PARAM[visible]</visible>
                <include content="Widget_SlideAnimation">
                    <param name="infowidget_full">$PARAM[infowidget_full]</param>
                    <param name="infowidget">$PARAM[infowidget]</param>
                    <param name="id">$PARAM[id]</param>
                </include>
                <animation effect="fade" start="100" end="0" time="400" reversible="false">Hidden</animation>
            </include>
        </definition>
    </include>

    <include name="Widget_Submenu">
        <param name="visible">true</param>
        <param name="altvisible">false</param>
        <param name="include">List_Button_Row</param>
        <param name="divider_h">200</param>
        <param name="item_h">120</param>
        <param name="itemlayout_h">160</param>
        <param name="detailed">true</param>
        <param name="spacertop">-200</param>
        <param name="item_w">view_poster_item_w</param>
        <param name="itemlayout_w">view_poster_itemlayout_w</param>
        <definition>
            <include content="Widget_Poster">
                <param name="groupid">$PARAM[groupid]</param>
                <param name="label">$PARAM[label]</param>
                <param name="id">$PARAM[id]</param>
                <param name="icon">$PARAM[icon]</param>
                <param name="detailed">$PARAM[detailed]</param>
                <param name="infowidget">$PARAM[infowidget]</param>
                <param name="infowidget_full">$PARAM[infowidget_full]</param>
                <param name="item_h">$PARAM[item_h]</param>
                <param name="itemlayout_h">$PARAM[itemlayout_h]</param>
                <param name="item_w">$PARAM[item_w]</param>
                <param name="itemlayout_w">$PARAM[itemlayout_w]</param>
                <param name="include">$PARAM[include]</param>
                <param name="visible">$PARAM[visible]</param>
                <param name="altvisible">$PARAM[altvisible]</param>
                <param name="labelvisible">$PARAM[labelvisible]</param>
                <param name="divider_h">$PARAM[divider_h]</param>
                <hitrect x="0" y="360" w="1920" h="$PARAM[itemlayout_h]" />
                <movement>6</movement>
                <nested />
            </include>
            <include content="Object_Control">
                <param name="control">group</param>
                <param name="id">$PARAM[spacerid]</param>
                <top>$PARAM[spacertop]</top>
                <height>0</height>
                <visible>[Container($PARAM[id]).IsUpdating | !Integer.IsEqual(Container($PARAM[id]).NumItems,0) | $PARAM[altvisible]] + $PARAM[visible]</visible>
                <animation effect="fade" start="100" end="0" time="400" reversible="false">Hidden</animation>
            </include>
        </definition>
    </include>


    <include name="Widget_Stacked">
        <param name="content_affix">&amp;nextpage=false</param>
        <param name="expand_plot">Skin.HasSetting(Recommendations.ExpandPlot)</param>
        <param name="include_widgetspacer">true</param>
        <definition>
            <include content="Widget_Submenu">
                <param name="spacerid">$PARAM[spacerid]</param>
                <param name="groupid">$PARAM[groupid]</param>
                <param name="id">$PARAM[id]</param>
                <param name="label">$PARAM[label]</param>
                <param name="visible">$PARAM[visible]</param>
                <param name="include">List_Button_Row</param>
                <param name="detailed">false</param>
                <param name="spacertop">widget_stack_t</param>
                <param name="item_h">60</param>
                <param name="itemlayout_h">100</param>
                <param name="item_w">217.14</param>
                <param name="itemlayout_w">257.14</param>
                <nested />
                <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
                <onfocus>ClearProperty(Slide.WidgetInfoStyle,Home)</onfocus>
                <onfocus>ClearProperty(Slide.WidgetContainer,Home)</onfocus>
                <onunfocus>ClearProperty(Slide.WidgetContainer,Home)</onunfocus>
                <onback>$PARAM[onback]</onback>
                <movement>6</movement>
            </include>
            <include content="Widget_Poster">
                <param name="groupid" value="$PARAM[widgetgroupid]" />
                <param name="id" value="$PARAM[widgetid]" />
                <param name="label" value="[CAPITALIZE]$INFO[Container($PARAM[id]).ListItem.Label][/CAPITALIZE]" />
                <param name="visible" value="$PARAM[visible]" />
                <param name="infowidget">$PARAM[expand_plot]</param>
                <param name="labelvisible">false</param>
                <param name="include">$PARAM[include]</param>
                <param name="height">$PARAM[height]</param>
                <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[widgetid],Home)</onfocus>
                <onfocus condition="$PARAM[expand_plot]">SetProperty(Slide.WidgetInfoStyle,Plot,Home)</onfocus>
                <onfocus condition="$PARAM[expand_plot]">SetProperty(Slide.WidgetContainer,$PARAM[widgetid],Home)</onfocus>
                <onfocus condition="![$PARAM[expand_plot]]">ClearProperty(Slide.WidgetInfoStyle,Home)</onfocus>
                <onfocus condition="![$PARAM[expand_plot]]">ClearProperty(Slide.WidgetContainer,Home)</onfocus>
                <onunfocus>ClearProperty(Slide.WidgetContainer,Home)</onunfocus>
                <animation effect="fade" start="100" end="0" time="0" condition="Container($PARAM[id]).IsUpdating">Conditional</animation>
                <onclick>noop</onclick>
                <content>$INFO[Container($PARAM[id]).ListItem.FolderPath,,$PARAM[content_affix]]</content>
                <content>
                    <item>
                        <label />
                        <onclick />
                        <visible>Integer.IsEqual(Container($PARAM[id]).NumItems,0) | String.IsEmpty(Container($PARAM[id]).ListItem.FolderPath) | !Container($PARAM[id]).ListItem.IsFolder</visible>
                    </item>
                </content>
            </include>
        </definition>
    </include>

    <include name="Widget_Recs_Basic">
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
        <onfocus>ClearProperty(Slide.WidgetInfoStyle,Home)</onfocus>
        <onfocus>ClearProperty(Slide.WidgetContainer,Home)</onfocus>
        <onunfocus>ClearProperty(Slide.WidgetContainer,Home)</onunfocus>
    </include>

    <include name="Widget_Recs_Expand">
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
        <onfocus condition="Skin.HasSetting(Recommendations.ExpandPlot)">SetProperty(Slide.WidgetContainer,$PARAM[id],Home)</onfocus>
        <onfocus>SetProperty(Slide.WidgetInfoStyle,Plot,Home)</onfocus>
        <onunfocus>ClearProperty(Slide.WidgetContainer,Home)</onunfocus>
    </include>
</includes>
