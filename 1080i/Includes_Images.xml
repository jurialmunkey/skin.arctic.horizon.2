<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <variable name="Image_OSD_Bookmarks_Circle">
        <value condition="!String.IsEmpty(VideoPlayer.Art(landscape))">$INFO[VideoPlayer.Art(landscape)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(tvshow.landscape))">$INFO[VideoPlayer.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(fanart))">$INFO[VideoPlayer.Art(fanart)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(tvshow.fanart))">$INFO[VideoPlayer.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(poster))">$INFO[VideoPlayer.Art(poster)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Art(tvshow.poster))">$INFO[VideoPlayer.Art(tvshow.poster)]</value>
        <value>$INFO[Player.Icon]</value>
    </variable>

    <variable name="Image_OSD_Episodes">
        <value condition="!String.IsEmpty(Container(6401).ListItem.Art(landscape))">$INFO[Container(6401).ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(Container(6401).ListItem.Art(tvshow.landscape))">$INFO[Container(6401).ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(Container(6401).ListItem.Art(fanart))">$INFO[Container(6401).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(6401).ListItem.Art(tvshow.fanart))">$INFO[Container(6401).ListItem.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(Container(6401).ListItem.Art(poster))">$INFO[Container(6401).ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Container(6401).ListItem.Art(tvshow.poster))">$INFO[Container(6401).ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container(6401).ListItem.Icon)">$INFO[Container(6401).ListItem.Icon]</value>
        <value>$VAR[Image_OSD_Bookmarks_Circle]</value>
    </variable>

    <variable name="Image_HDR_Codec">
        <value condition="String.IsEqual(ListItem.HdrType,dolbyvision)">other/dolbyvision.png</value>
        <value condition="String.IsEqual(ListItem.HdrType,hdr10)">other/hdr10.png</value>
        <value condition="String.IsEqual(ListItem.HdrType,hlg)">other/hlg.png</value>
        <value>other/HDR.png</value>
    </variable>

    <variable name="Image_OSD_HDR_Codec">
        <value condition="String.IsEqual(VideoPlayer.HdrType,dolbyvision)">other/dolbyvision.png</value>
        <value condition="String.IsEqual(VideoPlayer.HdrType,hdr10)">other/hdr10.png</value>
        <value condition="String.IsEqual(VideoPlayer.HdrType,hlg)">other/hlg.png</value>
        <value>other/HDR.png</value>
    </variable>

    <variable name="Image_Background_Floor">
        <value condition="Skin.String(BackgroundStyle,Fanart)">background/combined_fanart.png</value>
        <value condition="Skin.String(BackgroundStyle,Blur)">background/combined_flixart.png</value>
        <value>background/combined_stretch.png</value>
    </variable>

    <variable name="Image_SimpleBackground">
        <value condition="!String.IsEmpty(Skin.String(Background.Image))">$INFO[Skin.String(Background.Image)]</value>
        <value>background/blur2.png</value>
    </variable>

    <variable name="Image_CropLogo">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(cropimage))">$INFO[Container(99950).ListItem.Art(cropimage)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_clearlogo))">$INFO[Container(99950).ListItem.Property(base_clearlogo)]</value>
    </variable>

    <variable name="Image_OSD_PosterImage">
        <value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
    </variable>

    <variable name="Image_Background_Blur">
        <value condition="!$EXP[Exp_IsMediaWindow] + !$EXP[Exp_HasBackgroundFanart_Widgets] + !$EXP[Exp_InfoDialogs]">$VAR[Image_SimpleBackground]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(blurimage))">$INFO[Container(99950).ListItem.Art(blurimage)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(blurimage))">$INFO[Container(99950).ListItem.Art(blurimage)]</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Image_Background_Stretch">
        <value condition="!$EXP[Exp_IsMediaWindow] + !$EXP[Exp_HasBackgroundFanart_Widgets] + !$EXP[Exp_InfoDialogs]">$VAR[Image_SimpleBackground]</value>
        <value>$VAR[Image_Foreground_FlixArt_Quick]</value>
    </variable>

    <variable name="Image_Foreground_FlixArt">
        <value condition="![$EXP[Exp_HasBackgroundFanart]]">common/null.png</value>
        <value condition="Skin.String(BackgroundStyle,Blur) + !String.IsEmpty(Container(99950).ListItem.Art(blurimage))">$INFO[Container(99950).ListItem.Art(blurimage.original)]</value>
        <value condition="Skin.String(BackgroundStyle,Blur) + !String.IsEmpty(Container(99950).ListItem.Art(blurimage))">$INFO[Container(99950).ListItem.Art(blurimage.original)]</value>
        <value>$VAR[Image_Foreground_FlixArt_Quick]</value>
    </variable>

    <variable name="Image_Foreground_FlixArt_Quick">
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.fanart))">$INFO[ListItem.Art(artist.fanart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_fanart))">$INFO[Container(99950).ListItem.Property(base_fanart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(fanart))">$INFO[Container(99950).ListItem.Art(fanart)]</value>
    </variable>

    <variable name="Image_Background_Fanart">
        <value condition="Window.IsVisible(script-tmdbhelper-wikipedia.xml) + !String.IsEmpty(Window(Home).Property(TMDbHelper.Wikipedia.Backdrop))">$INFO[Window(Home).Property(TMDbHelper.Wikipedia.Backdrop)]</value>
        <value condition="$EXP[Exp_IsPersonInfo] | Window.IsVisible(script-tmdbhelper-wikipedia.xml)">$VAR[Image_SimpleBackground]</value>
        <value condition="$EXP[Exp_HasBackgroundFanart] + $EXP[Exp_HasExtraFanart] + !String.IsEmpty(Control.GetLabel(99998))">$INFO[Control.GetLabel(99998)]</value>
        <value condition="$EXP[Exp_HasBackgroundFanart] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(widgetPath)) + Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301) + $EXP[Exp_HasBackgroundFanart] + !String.IsEmpty(Container(301).ListItem.Art(fanart))">$INFO[Container(301).ListItem.Art(fanart)]</value>
        <value condition="String.IsEmpty(Container(300).ListItem.Property(widgetPath)) + Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301) + $EXP[Exp_HasBackgroundFanart] + !String.IsEmpty(Container(301).ListItem.Property(fanart))">$INFO[Container(301).ListItem.Property(fanart)]</value>
        <value condition="$EXP[Exp_HasBackgroundFanart] + !String.IsEmpty(ListItem.EPGEventIcon) + !Skin.HasSetting(PVR.DisableEPGEventIconFanart)">$INFO[ListItem.EPGEventIcon]</value>
        <value condition="Window.IsMedia + Control.IsVisible(502) + Control.HasFocus(503) + !String.IsEmpty(Container(503).ListItem.Art(fanart))">$INFO[Container(503).ListItem.Art(fanart)]</value>
        <value condition="Window.IsMedia + Control.IsVisible(512) + Control.HasFocus(513) + !String.IsEmpty(Container(513).ListItem.Art(fanart))">$INFO[Container(513).ListItem.Art(fanart)]</value>
        <value condition="Window.IsMedia + Control.IsVisible(522) + Control.HasFocus(523) + !String.IsEmpty(Container(523).ListItem.Art(fanart))">$INFO[Container(523).ListItem.Art(fanart)]</value>
        <value condition="$EXP[Exp_HasBackgroundFanart] + !String.IsEmpty(Container(99950).ListItem.Art(fanart))">$INFO[Container(99950).ListItem.Art(fanart)]</value>
        <value>$VAR[Image_SimpleBackground]</value>
    </variable>

    <variable name="Image_OtherIcon">
        <value condition="$EXP[Exp_IsStudio]">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
        <value condition="$EXP[Exp_IsCountry]">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</value>
    </variable>
    <variable name="Image_SkinShortcut">
        <value condition="String.IsEqual(ListItem.Label,..)">special://skin/extras/icons/undo.png</value>
        <value condition="String.IsEqual(ListItem.Icon,thumb)">special://skin/extras/icons/addon.png</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_StartUp">
        <value condition="!String.IsEmpty(Skin.String(Startup.ImageFolder))">$INFO[Skin.String(Startup.ImageFolder)]</value>
        <value>special://skin/extras/backgrounds/launch/</value>
    </variable>

    <variable name="Image_PVRPoster">
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(poster))">$INFO[Container(99950).ListItem.Art(poster)]</value>
    </variable>

    <variable name="Image_GenreIcon">
        <value condition="!String.IsEmpty(Skin.String(CustomGenreIconLocation))">$INFO[Skin.String(CustomGenreIconLocation)]$INFO[ListItem.Label,,.png]</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.horizon/,.png]</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.transparent/,.png]</value>
    </variable>

    <variable name="Image_GenreIcon_Path">
        <value condition="!String.IsEmpty(Skin.String(CustomGenreIconLocation))">$INFO[Skin.String(CustomGenreIconLocation)]</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">resource.images.moviegenreicons.horizon</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">resource.images.moviegenreicons.transparent</value>
    </variable>

    <variable name="Image_FullscreenWidget_Artwork">
        <value condition="!String.IsEmpty(Container(301).ListItem.Art(fanart))">$INFO[Container(301).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.PicturePath)">$INFO[Container(301).ListItem.PicturePath]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem.EPGEventIcon) + !Skin.HasSetting(PVR.DisableEPGEventIconFanart)">$INFO[Container(301).ListItem.EPGEventIcon]</value>
        <value condition="String.IsEqual(Container(301).ListItem.DBtype,movie) | String.IsEqual(Container(301).ListItem.DBtype,set)">special://skin/extras/backgrounds/fallbacks/film.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem.DBtype,artist) | String.IsEqual(Container(301).ListItem.DBtype,album) | String.IsEqual(Container(301).ListItem.DBtype,song) | String.IsEqual(Container(301).ListItem.DBtype,musicvideo)">special://skin/extras/backgrounds/fallbacks/music.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem.DBtype,tvshow) | String.IsEqual(Container(301).ListItem.DBtype,season) | String.IsEqual(Container(301).ListItem.DBtype,episode) | String.IsEqual(Container(301).ListItem.DBtype,video)">special://skin/extras/backgrounds/fallbacks/tv.jpg</value>
    </variable>
    <variable name="Image_FullscreenWidget_Artwork+1">
        <value condition="!String.IsEmpty(Container(301).ListItem(1).Art(fanart))">$INFO[Container(301).ListItem(1).Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem(1).PicturePath)">$INFO[Container(301).ListItem(1).PicturePath]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem(1).EPGEventIcon) + !Skin.HasSetting(PVR.DisableEPGEventIconFanart)">$INFO[Container(301).ListItem(1).EPGEventIcon]</value>
        <value condition="String.IsEqual(Container(301).ListItem(1).DBtype,movie) | String.IsEqual(Container(301).ListItem(1).DBtype,set)">special://skin/extras/backgrounds/fallbacks/film.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem(1).DBtype,artist) | String.IsEqual(Container(301).ListItem(1).DBtype,album) | String.IsEqual(Container(301).ListItem(1).DBtype,song) | String.IsEqual(Container(301).ListItem(1).DBtype,musicvideo)">special://skin/extras/backgrounds/fallbacks/music.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem(1).DBtype,tvshow) | String.IsEqual(Container(301).ListItem(1).DBtype,season) | String.IsEqual(Container(301).ListItem(1).DBtype,episode) | String.IsEqual(Container(301).ListItem(1).DBtype,video)">special://skin/extras/backgrounds/fallbacks/tv.jpg</value>
    </variable>
    <variable name="Image_FullscreenWidget_Artwork-1">
        <value condition="!String.IsEmpty(Container(301).ListItem(-1).Art(fanart))">$INFO[Container(301).ListItem(-1).Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem(-1).PicturePath)">$INFO[Container(301).ListItem(-1).PicturePath]</value>
        <value condition="!String.IsEmpty(Container(301).ListItem(-1).EPGEventIcon) + !Skin.HasSetting(PVR.DisableEPGEventIconFanart)">$INFO[Container(301).ListItem(-1).EPGEventIcon]</value>
        <value condition="String.IsEqual(Container(301).ListItem(-1).DBtype,movie) | String.IsEqual(Container(301).ListItem(-1).DBtype,set)">special://skin/extras/backgrounds/fallbacks/film.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem(-1).DBtype,artist) | String.IsEqual(Container(301).ListItem(-1).DBtype,album) | String.IsEqual(Container(301).ListItem(-1).DBtype,song) | String.IsEqual(Container(301).ListItem(-1).DBtype,musicvideo)">special://skin/extras/backgrounds/fallbacks/music.jpg</value>
        <value condition="String.IsEqual(Container(301).ListItem(-1).DBtype,tvshow) | String.IsEqual(Container(301).ListItem(-1).DBtype,season) | String.IsEqual(Container(301).ListItem(-1).DBtype,episode) | String.IsEqual(Container(301).ListItem(-1).DBtype,video)">special://skin/extras/backgrounds/fallbacks/tv.jpg</value>
    </variable>

    <variable name="Image_DiscArt">
        <value condition="!String.IsEmpty(ListItem.Art(discart))">$INFO[ListItem.Art(discart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(album.discart))">$INFO[ListItem.Art(album.discart)]</value>
    </variable>

    <variable name="Image_FullscreenWidget_PlayButton">
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.KodiSetting.DefaultSelectAction),$NUMBER[3])">special://skin/extras/icons/info2.png</value>
        <value condition="Container(301).ListItem.IsFolder">special://skin/extras/icons/folder.png</value>
        <value>special://skin/extras/icons/play3.png</value>
    </variable>

    <variable name="Image_FullscreenWidget_InfoButton">
        <value condition="String.IsEqual(Window(Home).Property(TMDbHelper.KodiSetting.DefaultSelectAction),$NUMBER[3])">special://skin/extras/icons/indent.png</value>
        <value condition="Skin.HasSetting(Widgets.FullScreenContext)">special://skin/extras/icons/indent.png</value>
        <value>special://skin/extras/icons/info2.png</value>
    </variable>

    <variable name="Image_VideoInfo_PlayButton">
        <value condition="$EXP[Exp_InfoDialog_IsFolder]">special://skin/extras/icons/folder.png</value>
        <value>special://skin/extras/icons/play3.png</value>
    </variable>

    <variable name="Image_ArtistFanartVis">
        <value condition="System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled) + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))">$INFO[Window(Visualisation).Property(ArtistSlideshow.Image)]</value>
        <value condition="[!System.HasAddon(script.artistslideshow) | Skin.HasSetting(ArtistSlideShow.Disabled) | String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))] + !String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Image_OSD_Repeat">
        <value condition="Playlist.IsRepeatOne">special://skin/extras/icons/repeat-one.png</value>
        <value condition="Playlist.IsRepeat">special://skin/extras/icons/repeat.png</value>
        <value>special://skin/extras/icons/repeat-off.png</value>
    </variable>

    <variable name="Image_OSD_Shuffle">
        <value condition="Playlist.IsRandom">special://skin/extras/icons/shuffle.png</value>
        <value>special://skin/extras/icons/shuffle-off.png</value>
    </variable>

    <variable name="Image_UpNext">
        <value condition="!String.IsEmpty(Window.Property(landscape))">$INFO[Window.Property(landscape)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart))">$INFO[Window.Property(fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(thumb))">$INFO[Window.Property(thumb)]</value>
    </variable>

    <variable name="Image_IsCurrentStream">
        <value condition="!String.IsEmpty(ListItem.Property(iscurrent))">buttons/check-on.png</value>
        <value>buttons/check-off.png</value>
    </variable>

    <variable name="Image_VideoQuality_Main">
        <value condition="!$EXP[Exp_InfoDialogs] + Window.IsVisible(Home) + Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)">$VAR[Image_VideoQuality_C301]</value>
        <value>$VAR[Image_VideoQuality_Parent]</value>
    </variable>

    <variable name="Image_OSD_VideoQuality">
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,1080) | String.IsEqual(VideoPlayer.VideoResolution,4K)">flags/quality/4k.png</value>
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,720)">flags/quality/fhd.png</value>
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,719)">flags/quality/hd.png</value>
        <value condition="!String.IsEmpty(VideoPlayer.VideoResolution)">flags/quality/sd.png</value>
        <value condition="True">flags/quality/info.png</value>
    </variable>

    <variable name="Image_OSD_Forward">
        <value condition="Player.Paused">osd/frame-forward.png</value>
        <value>osd/jump-forward.png</value>
    </variable>

    <variable name="Image_OSD_Back">
        <value condition="Player.Paused">osd/frame-back.png</value>
        <value>osd/jump-back.png</value>
    </variable>

    <variable name="Image_OSD_PlayPause">
        <value condition="Player.Paused">special://skin/extras/icons/play2.png</value>
        <value condition="Player.Forwarding">special://skin/extras/icons/forward.png</value>
        <value condition="Player.Rewinding">special://skin/extras/icons/backward.png</value>
        <value>special://skin/extras/icons/pause.png</value>
    </variable>

    <variable name="Image_NowPlaying_PlayPause">
        <value condition="Player.Paused">special://skin/extras/icons/pause.png</value>
        <value condition="Player.Forwarding">special://skin/extras/icons/forward.png</value>
        <value condition="Player.Rewinding">special://skin/extras/icons/backward.png</value>
        <value>special://skin/extras/icons/play2.png</value>
    </variable>

    <variable name="Image_OSD_NextStop">
        <value condition="String.IsEqual(VideoPlayer.PlaylistPosition,VideoPlayer.PlaylistLength) | Skin.HasSetting(OSD.AlwaysDisplayStop)">special://skin/extras/icons/stop.png</value>
        <value>special://skin/extras/icons/forward-step.png</value>
    </variable>

    <variable name="Image_CombinedStudio">
        <value condition="Container.Content(studios)">$INFO[ListItem.Label,resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Network))">$INFO[ListItem.Property(Network),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Studio))">$INFO[ListItem.Property(Studio),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio,resource://resource.images.studios.coloured/,.png]</value>
    </variable>

    <variable name="Image_OSD_DirectorIcon">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.1.Thumb)) + String.IsEqual(Window(Home).Property(TMDbHelper.Player.Director.1.Role),Director)">$INFO[Window(Home).Property(TMDbHelper.Player.Director.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.2.Thumb)) + String.IsEqual(Window(Home).Property(TMDbHelper.Player.Director.2.Role),Director)">$INFO[Window(Home).Property(TMDbHelper.Player.Director.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Director.3.Thumb)) + String.IsEqual(Window(Home).Property(TMDbHelper.Player.Director.3.Role),Director)">$INFO[Window(Home).Property(TMDbHelper.Player.Director.3.Thumb)]</value>
    </variable>

    <variable name="Image_DirectorIcon">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Director.1.Thumb)) + String.IsEqual(Container(99950).ListItem.Property(Director.1.Role),Director)">$INFO[Container(99950).ListItem.Property(Director.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Director.2.Thumb)) + String.IsEqual(Container(99950).ListItem.Property(Director.2.Role),Director)">$INFO[Container(99950).ListItem.Property(Director.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Director.3.Thumb)) + String.IsEqual(Container(99950).ListItem.Property(Director.3.Role),Director)">$INFO[Container(99950).ListItem.Property(Director.3.Thumb)]</value>
    </variable>

    <variable name="Image_OSD_WriterIcon">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.1.Thumb)) + [String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.1.Role),Writer) | String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.1.Role),Screenplay)]">$INFO[Window(Home).Property(TMDbHelper.Player.Writer.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.2.Thumb)) + [String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.2.Role),Writer) | String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.2.Role),Screenplay)]">$INFO[Window(Home).Property(TMDbHelper.Player.Writer.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Writer.3.Thumb)) + [String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.3.Role),Writer) | String.IsEqual(Window(Home).Property(TMDbHelper.Player.Writer.3.Role),Screenplay)]">$INFO[Window(Home).Property(TMDbHelper.Player.Writer.3.Thumb)]</value>
    </variable>

    <variable name="Image_WriterIcon">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Writer.1.Thumb)) + [String.IsEqual(Container(99950).ListItem.Property(Writer.1.Role),Writer) | String.IsEqual(Container(99950).ListItem.Property(Writer.1.Role),Screenplay)]">$INFO[Container(99950).ListItem.Property(Writer.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Writer.2.Thumb)) + [String.IsEqual(Container(99950).ListItem.Property(Writer.2.Role),Writer) | String.IsEqual(Container(99950).ListItem.Property(Writer.2.Role),Screenplay)]">$INFO[Container(99950).ListItem.Property(Writer.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Writer.3.Thumb)) + [String.IsEqual(Container(99950).ListItem.Property(Writer.3.Role),Writer) | String.IsEqual(Container(99950).ListItem.Property(Writer.3.Role),Screenplay)]">$INFO[Container(99950).ListItem.Property(Writer.3.Thumb)]</value>
    </variable>

    <variable name="Image_CreatorIcon">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Creator.1.Thumb))">$INFO[Container(99950).ListItem.Property(Creator.1.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Creator.2.Thumb))">$INFO[Container(99950).ListItem.Property(Creator.2.Thumb)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(Creator.3.Thumb))">$INFO[Container(99950).ListItem.Property(Creator.3.Thumb)]</value>
    </variable>

    <variable name="Image_OSD_StudioIcon">
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Studio.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Studio.1.Name),resource://resource.images.studios.coloured/,.png]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Network.1.Name))">$INFO[Window(Home).Property(TMDbHelper.Player.Network.1.Name),resource://resource.images.studios.coloured/,.png]</value>
    </variable>

    <variable name="Image_OSD_Clearlogo">
        <value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Player.Art(artist.clearlogo))">$INFO[Player.Art(artist.clearlogo)]</value>
    </variable>

    <variable name="Image_Clearlogo">
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.clearlogo))">$INFO[ListItem.Art(artist.clearlogo)]</value>
    </variable>

    <variable name="Image_MuteBug_Seekbar">
        <value condition="Player.Muted">special://skin/extras/icons/mute.png</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(movies)">special://skin/extras/icons/film.png</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(episodes)">special://skin/extras/icons/tv.png</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv)">special://skin/extras/icons/livetv.png</value>
        <value condition="Player.HasVideo">special://skin/extras/icons/videoplay.png</value>
        <value>special://skin/extras/icons/songs.png</value>
    </variable>

    <variable name="Image_MuteBug">
        <value condition="Player.Muted">special://skin/extras/icons/mute.png</value>
        <value>special://skin/extras/icons/settings.png</value>
    </variable>

    <variable name="Image_ClearArt">
        <value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.clearart))">$INFO[ListItem.Art(artist.clearart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(clearart))">$INFO[Container(99950).ListItem.Art(clearart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(tvshow.clearart))">$INFO[Container(99950).ListItem.Art(tvshow.clearart)]</value>
    </variable>

    <variable name="Image_AddonInfo_Enable">
        <value condition="String.IsEqual(Control.GetLabel(7),$LOCALIZE[24021])">special://skin/extras/icons/enabled.png</value>
        <value>special://skin/extras/icons/disabled.png</value>
    </variable>

    <variable name="Image_AddonInfo_Install">
        <value condition="String.IsEqual(Control.GetLabel(6),$LOCALIZE[24037])">special://skin/extras/icons/uninstall.png</value>
        <value>special://skin/extras/icons/download.png</value>
    </variable>

    <variable name="Image_Watched">
        <value condition="System.Setting(hidewatched)">special://skin/extras/icons/watched-hide.png</value>
        <value>special://skin/extras/icons/watched-show.png</value>
    </variable>
    <variable name="Image_Filtered">
        <value condition="Container.Filtered | !String.IsEmpty(Control.GetLabel(19).index(1))">special://skin/extras/icons/filter-on.png</value>
        <value>special://skin/extras/icons/filter-off.png</value>
    </variable>

    <variable name="Image_ContextFanart">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_fanart))">$INFO[Container(99950).ListItem.Property(base_fanart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(fanart))">$INFO[Container(99950).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(tvshow.fanart))">$INFO[Container(99950).ListItem.Art(tvshow.fanart)]</value>
    </variable>

    <variable name="Image_ContextPoster">
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_poster))">$INFO[Container(99950).ListItem.Property(base_poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(poster))">$INFO[Container(99950).ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Art(tvshow.poster))">$INFO[Container(99950).ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Property(base_icon))">$INFO[Container(99950).ListItem.Property(base_icon)]</value>
        <value>fallback/kodi-logo.png</value>
    </variable>

    <variable name="Image_RipSource">
        <value condition="String.Contains(ListItem.FileNameAndPath,2160p) | String.Contains(ListItem.FileNameAndPath,UHD) | String.Contains(ListItem.FileNameAndPath,UltraHD) | String.Contains(ListItem.FileNameAndPath,Ultra-HD) | String.Contains(ListItem.FileNameAndPath,4K)">other/4K.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,blu-ray) | String.Contains(ListItem.FileNameAndPath,bluray) | String.Contains(ListItem.FileNameAndPath,bdrip) | String.Contains(ListItem.FileNameAndPath,bd25) | String.Contains(ListItem.FileNameAndPath,bd50)">other/bluray.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,hddvd) | String.Contains(ListItem.FileNameAndPath,hd-dvd)">other/hddvd.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,dvd)">other/dvd.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,hdtv) | String.Contains(ListItem.FileNameAndPath,pdtv) | String.Contains(ListItem.FileNameAndPath,dsr)">other/hdtv.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,sdtv)">other/sdtv.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,web-dl) | String.Contains(ListItem.FileNameAndPath,webdl) | String.Contains(ListItem.FileNameAndPath,WEBRip) | String.EndsWith(ListItem.FileNameAndPath,.strm) | [String.IsEmpty(ListItem.VideoCodec) + String.IsEmpty(ListItem.AudioCodec)]">other/web-dl.png</value>
        <value>common/null.png</value>
    </variable>
    <variable name="Image_OSD_RipSource">
        <value condition="String.Contains(Player.FileNameAndPath,2160p) | String.Contains(Player.FileNameAndPath,UHD) | String.Contains(Player.FileNameAndPath,UltraHD) | String.Contains(Player.FileNameAndPath,Ultra-HD) | String.Contains(Player.FileNameAndPath,4K)">other/4K.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,blu-ray) | String.Contains(Player.FileNameAndPath,bluray) | String.Contains(Player.FileNameAndPath,bdrip) | String.Contains(Player.FileNameAndPath,bd25) | String.Contains(Player.FileNameAndPath,bd50)">other/bluray.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,hddvd) | String.Contains(Player.FileNameAndPath,hd-dvd)">other/hddvd.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,dvd)">other/dvd.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,hdtv) | String.Contains(Player.FileNameAndPath,pdtv) | String.Contains(Player.FileNameAndPath,dsr)">other/hdtv.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,sdtv)">other/sdtv.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,web-dl) | String.Contains(Player.FileNameAndPath,webdl) | String.Contains(Player.FileNameAndPath,WEBRip) | String.EndsWith(Player.FileNameAndPath,.strm) | [String.IsEmpty(VideoPlayer.VideoCodec) + String.IsEmpty(VideoPlayer.AudioCodec)]">other/web-dl.png</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Image_AudioCodec">
        <value condition="String.Contains(ListItem.FileNameAndPath,atmos)">audio/atmos.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,dtsx) | String.Contains(ListItem.FileNameAndPath,dts-x) | String.Contains(ListItem.FileNameAndPath,dts:x)">audio/dtsx.png</value>
        <value>audio/$INFO[ListItem.AudioCodec].png</value>
    </variable>
    <variable name="Image_OSD_AudioCodec">
        <value condition="String.Contains(Player.FileNameAndPath,atmos)">audio/atmos.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,dtsx) | String.Contains(Player.FileNameAndPath,dts-x) | String.Contains(Player.FileNameAndPath,dts:x)">audio/dtsx.png</value>
        <value>audio/$INFO[VideoPlayer.AudioCodec].png</value>
    </variable>
    <variable name="Image_OSD_AudioCodec_Mono">
        <value condition="String.Contains(Player.FileNameAndPath,atmos)">flags/monochrome/audio/atmos.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,dtsx) | String.Contains(Player.FileNameAndPath,dts-x) | String.Contains(Player.FileNameAndPath,dts:x)">flags/monochrome/audio/dtsx.png</value>
        <value>flags/monochrome/audio/$INFO[VideoPlayer.AudioCodec].png</value>
    </variable>

    <variable name="Image_ListItem_RottenTomatoes">
        <value condition="String.IsEqual(Container(99950).ListItem.Property(RottenTomatoes_Image),certified)">certified.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(RottenTomatoes_Image),fresh)">rtfresh.png</value>
        <value condition="String.IsEqual(Container(99950).ListItem.Property(RottenTomatoes_Image),rotten)">rtrotten.png</value>
        <value condition="String.IsEmpty(Container(99950).ListItem.Property(RottenTomatoes_Rating))">rtfresh.png</value>
        <value condition="Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_Rating),59)">rtfresh.png</value>
        <value>rtfresh.png</value>
    </variable>
    <variable name="Image_ListItem_RottenTomatoes_UserMeter">
        <value condition="Integer.IsGreater(Container(99950).ListItem.Property(RottenTomatoes_UserMeter),59) | String.IsEmpty(Container(99950).ListItem.Property(RottenTomatoes_UserMeter))">popcorn.png</value>
        <value>popcorn_spilt.png</value>
    </variable>
    <variable name="Image_Overlay_List">
        <value condition="$EXP[Exp_HasWatchedProgress]" />

        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(Indicator.DisableWatched)">indicator/checkmark-fo.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0) + !String.IsEqual(ListItem.DBType,song) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,artist) + !String.IsEqual(ListItem.DBType,image) + !String.IsEqual(ListItem.DBType,addon) + !Skin.HasSetting(Indicator.DisableWatched)">indicator/checkmark-fo.png</value>

        <value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem.DBType,movie) + [String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.1.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.2.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.3.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.4.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.5.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.6.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.7.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.8.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.9.Title)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestMovie.10.Title))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/new-fo.png</value>

        <value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem.DBType,episode) + [String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.1.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.2.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.3.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.4.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.5.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.6.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.7.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.8.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.9.EpisodeTitle)) | String.IsEqual(ListItem.Title,Window(Home).Property(LatestEpisode.10.EpisodeTitle))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/new-fo.png</value>

        <value condition="!String.IsEmpty(ListItem.Property(Item.Info)) + !String.IsEmpty(ListItem.DBID) + !Skin.HasSetting(Indicator.DisableLibrary)">indicator/library.png</value>
        <value condition="ListItem.IsCollection + !Skin.HasSetting(Indicator.DisableCollection)">indicator/movieset.png</value>
        <value condition="ListItem.IsFolder">indicator/folder.png</value>
        <value>indicator/library.png</value>
    </variable>

    <variable name="Image_PVRGuide_Indicator">
        <value condition="ListItem.IsRecording">indicator/record.png</value>
        <value condition="ListItem.HasTimer">indicator/timer.png</value>
        <value condition="ListItem.IsPlayable + !Skin.HasSetting(Indicator.DisablePVRGuideCatchUp)">indicator/library.png</value>
    </variable>
</includes>
