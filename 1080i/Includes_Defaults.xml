<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <default type="label">
        <align>left</align>
        <aligny>center</aligny>
        <font>font_main</font>
        <textcolor>dialog_fg_70</textcolor>
        <include content="Object_Scroll" condition="Skin.HasSetting(Labels.Autoscroll)">
            <param name="scroll">true</param>
        </include>
    </default>

    <default type="textbox">
        <align>left</align>
        <font>font_main</font>
        <textcolor>dialog_fg_70</textcolor>
        <include content="Defs_AutoScroll_TextBox">
            <param name="condition">!Skin.HasSetting(Textboxes.DisableAutoscroll)</param>
        </include>
    </default>

    <default type="button">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <pulseonselect>false</pulseonselect>
    </default>

    <default type="colorbutton">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <colorwidth>84</colorwidth>
        <colorheight>24</colorheight>
        <texturecolormask>buttons/colorpicker.png</texturecolormask>
        <texturecolordisabledmask colordiffuse="dialog_fg_30">buttons/colorpicker.png</texturecolordisabledmask>
        <pulseonselect>false</pulseonselect>
    </default>

    <default type="edit">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <pulseonselect>false</pulseonselect>
    </default>

    <default type="progress">
        <texturebg colordiffuse="2f5f5f5f" border="4">progress/progress-bg.png</texturebg>
        <lefttexture colordiffuse="$VAR[ColorHighlight]" border="4">progress/progress-left.png</lefttexture>
        <midtexture colordiffuse="$VAR[ColorHighlight]" border="4">progress/progress-end.png</midtexture>
        <righttexture colordiffuse="$VAR[ColorHighlight]" border="4">progress/progress-right.png</righttexture>
        <overlaytexture/>
    </default>

    <default type="radiobutton">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <pulseonselect>false</pulseonselect>
        <radiowidth>84</radiowidth>
        <radioheight>24</radioheight>
        <texturefocus colordiffuse="dialog_bg_12">common/white.png</texturefocus>
        <texturenofocus/>
        <textureradioondisabled colordiffuse="dialog_fg_12">buttons/check-on.png</textureradioondisabled>
        <textureradiooffdisabled colordiffuse="dialog_fg_12">buttons/check-off.png</textureradiooffdisabled>
        <textureradioonfocus colordiffuse="$VAR[ColorSelected]">buttons/check-on.png</textureradioonfocus>
        <textureradioofffocus colordiffuse="$VAR[ColorSelected]">buttons/check-off.png</textureradioofffocus>
        <textureradioonnofocus colordiffuse="dialog_fg_70">buttons/check-on.png</textureradioonnofocus>
        <textureradiooffnofocus colordiffuse="dialog_fg_70">buttons/check-off.png</textureradiooffnofocus>
    </default>

    <default type="spincontrolex">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="dialog_bg_12">common/white.png</texturefocus>
        <texturenofocus/>
        <textureup flipy="true" colordiffuse="dialog_fg_30">buttons/triangle-down.png</textureup>
        <texturedown colordiffuse="dialog_fg_30">buttons/triangle-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="$VAR[ColorSelected]">buttons/triangle-down.png</textureupfocus>
        <texturedownfocus colordiffuse="$VAR[ColorSelected]">buttons/triangle-down.png</texturedownfocus>
        <textureupdisabled flipy="true" colordiffuse="dialog_fg_12">buttons/triangle-down.png</textureupdisabled>
        <texturedowndisabled colordiffuse="dialog_fg_12">buttons/triangle-down.png</texturedowndisabled>
        <reverse>yes</reverse>
        <spinwidth>30</spinwidth>
        <spinheight>30</spinheight>
    </default>
    <default type="spincontrol">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="dialog_bg_12">common/white.png</texturefocus>
        <texturenofocus/>
        <textureup flipy="true" colordiffuse="dialog_fg_30">buttons/triangle-down.png</textureup>
        <texturedown colordiffuse="dialog_fg_30">buttons/triangle-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="$VAR[ColorSelected]">buttons/triangle-down.png</textureupfocus>
        <texturedownfocus colordiffuse="$VAR[ColorSelected]">buttons/triangle-down.png</texturedownfocus>
        <textureupdisabled flipy="true" colordiffuse="dialog_fg_12">buttons/triangle-down.png</textureupdisabled>
        <texturedowndisabled colordiffuse="dialog_fg_12">buttons/triangle-down.png</texturedowndisabled>
        <spinwidth>30</spinwidth>
        <spinheight>30</spinheight>
        <reverse>yes</reverse>
    </default>


    <default type="slider">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="dialog_bg_12">common/white.png</texturefocus>
        <texturenofocus/>
        <sliderwidth>192</sliderwidth>
        <sliderheight>12</sliderheight>
        <pulseonselect>false</pulseonselect>
        <texturesliderbar colordiffuse="dialog_fg_12" border="6">slider/slider_bg.png</texturesliderbar>
        <textureslidernib colordiffuse="dialog_fg_30" border="6">slider/slider_nib.png</textureslidernib>
        <textureslidernibfocus colordiffuse="$VAR[ColorSelected]" border="6">slider/slider_nib.png</textureslidernibfocus>
        <orientation>horizontal</orientation>
    </default>
    <default type="sliderex">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="dialog_bg_12">common/white.png</texturefocus>
        <texturenofocus/>
        <sliderwidth>192</sliderwidth>
        <sliderheight>12</sliderheight>
        <pulseonselect>false</pulseonselect>
        <texturesliderbar colordiffuse="dialog_fg_12" border="6">slider/slider_bg.png</texturesliderbar>
        <textureslidernib colordiffuse="dialog_fg_30" border="6">slider/slider_nib.png</textureslidernib>
        <textureslidernibfocus colordiffuse="$VAR[ColorSelected]" border="6">slider/slider_nib.png</textureslidernibfocus>
        <orientation>horizontal</orientation>
    </default>

    <default type="togglebutton">
        <align>center</align>
        <aligny>center</aligny>
        <font>font_mini</font>
        <textoffsetx>30</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>$VAR[ColorSelected]</focusedcolor>
        <disabledcolor>dialog_fg_30</disabledcolor>
        <include>Texture_Button</include>
        <include>Texture_ToggleButton</include>
        <pulseonselect>false</pulseonselect>
    </default>

    <default type="grouplist">
        <scrolltime tween="quadratic">400</scrolltime>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
    </default>

    <default type="scrollbar">
        <texturesliderbackground colordiffuse="00ffffff" border="4">scrollbar/scrollv.png</texturesliderbackground>
        <texturesliderbar colordiffuse="dialog_fg_30" border="4">scrollbar/scrollv.png</texturesliderbar>
        <include>Texture_Scrollbar_V</include>
        <textureslidernib/>
        <textureslidernibfocus/>
        <showonepage>false</showonepage>
        <orientation>vertical</orientation>
    </default>


    <include name="Defs_Progress_Colorfader">
        <animation effect="fade" start="100" end="0" condition="Integer.IsEqual($PARAM[info],0)">Conditional</animation>
        <animation effect="fade" start="100" end="1" condition="Integer.IsEqual($PARAM[info],1)">Conditional</animation>
        <animation effect="fade" start="100" end="2" condition="Integer.IsEqual($PARAM[info],2)">Conditional</animation>
        <animation effect="fade" start="100" end="3" condition="Integer.IsEqual($PARAM[info],3)">Conditional</animation>
        <animation effect="fade" start="100" end="4" condition="Integer.IsEqual($PARAM[info],4)">Conditional</animation>
        <animation effect="fade" start="100" end="5" condition="Integer.IsEqual($PARAM[info],5)">Conditional</animation>
        <animation effect="fade" start="100" end="6" condition="Integer.IsEqual($PARAM[info],6)">Conditional</animation>
        <animation effect="fade" start="100" end="7" condition="Integer.IsEqual($PARAM[info],7)">Conditional</animation>
        <animation effect="fade" start="100" end="8" condition="Integer.IsEqual($PARAM[info],8)">Conditional</animation>
        <animation effect="fade" start="100" end="9" condition="Integer.IsEqual($PARAM[info],9)">Conditional</animation>
        <animation effect="fade" start="100" end="10" condition="Integer.IsEqual($PARAM[info],10)">Conditional</animation>
        <animation effect="fade" start="100" end="11" condition="Integer.IsEqual($PARAM[info],11)">Conditional</animation>
        <animation effect="fade" start="100" end="12" condition="Integer.IsEqual($PARAM[info],12)">Conditional</animation>
        <animation effect="fade" start="100" end="13" condition="Integer.IsEqual($PARAM[info],13)">Conditional</animation>
        <animation effect="fade" start="100" end="14" condition="Integer.IsEqual($PARAM[info],14)">Conditional</animation>
        <animation effect="fade" start="100" end="15" condition="Integer.IsEqual($PARAM[info],15)">Conditional</animation>
        <animation effect="fade" start="100" end="16" condition="Integer.IsEqual($PARAM[info],16)">Conditional</animation>
        <animation effect="fade" start="100" end="17" condition="Integer.IsEqual($PARAM[info],17)">Conditional</animation>
        <animation effect="fade" start="100" end="18" condition="Integer.IsEqual($PARAM[info],18)">Conditional</animation>
        <animation effect="fade" start="100" end="19" condition="Integer.IsEqual($PARAM[info],19)">Conditional</animation>
        <animation effect="fade" start="100" end="20" condition="Integer.IsEqual($PARAM[info],20)">Conditional</animation>
        <animation effect="fade" start="100" end="21" condition="Integer.IsEqual($PARAM[info],21)">Conditional</animation>
        <animation effect="fade" start="100" end="22" condition="Integer.IsEqual($PARAM[info],22)">Conditional</animation>
        <animation effect="fade" start="100" end="23" condition="Integer.IsEqual($PARAM[info],23)">Conditional</animation>
        <animation effect="fade" start="100" end="24" condition="Integer.IsEqual($PARAM[info],24)">Conditional</animation>
        <animation effect="fade" start="100" end="25" condition="Integer.IsEqual($PARAM[info],25)">Conditional</animation>
        <animation effect="fade" start="100" end="26" condition="Integer.IsEqual($PARAM[info],26)">Conditional</animation>
        <animation effect="fade" start="100" end="27" condition="Integer.IsEqual($PARAM[info],27)">Conditional</animation>
        <animation effect="fade" start="100" end="28" condition="Integer.IsEqual($PARAM[info],28)">Conditional</animation>
        <animation effect="fade" start="100" end="29" condition="Integer.IsEqual($PARAM[info],29)">Conditional</animation>
        <animation effect="fade" start="100" end="30" condition="Integer.IsEqual($PARAM[info],30)">Conditional</animation>
        <animation effect="fade" start="100" end="31" condition="Integer.IsEqual($PARAM[info],31)">Conditional</animation>
        <animation effect="fade" start="100" end="32" condition="Integer.IsEqual($PARAM[info],32)">Conditional</animation>
        <animation effect="fade" start="100" end="33" condition="Integer.IsEqual($PARAM[info],33)">Conditional</animation>
        <animation effect="fade" start="100" end="34" condition="Integer.IsEqual($PARAM[info],34)">Conditional</animation>
        <animation effect="fade" start="100" end="35" condition="Integer.IsEqual($PARAM[info],35)">Conditional</animation>
        <animation effect="fade" start="100" end="36" condition="Integer.IsEqual($PARAM[info],36)">Conditional</animation>
        <animation effect="fade" start="100" end="37" condition="Integer.IsEqual($PARAM[info],37)">Conditional</animation>
        <animation effect="fade" start="100" end="38" condition="Integer.IsEqual($PARAM[info],38)">Conditional</animation>
        <animation effect="fade" start="100" end="39" condition="Integer.IsEqual($PARAM[info],39)">Conditional</animation>
        <animation effect="fade" start="100" end="40" condition="Integer.IsEqual($PARAM[info],40)">Conditional</animation>
        <animation effect="fade" start="100" end="41" condition="Integer.IsEqual($PARAM[info],41)">Conditional</animation>
        <animation effect="fade" start="100" end="42" condition="Integer.IsEqual($PARAM[info],42)">Conditional</animation>
        <animation effect="fade" start="100" end="43" condition="Integer.IsEqual($PARAM[info],43)">Conditional</animation>
        <animation effect="fade" start="100" end="44" condition="Integer.IsEqual($PARAM[info],44)">Conditional</animation>
        <animation effect="fade" start="100" end="45" condition="Integer.IsEqual($PARAM[info],45)">Conditional</animation>
        <animation effect="fade" start="100" end="46" condition="Integer.IsEqual($PARAM[info],46)">Conditional</animation>
        <animation effect="fade" start="100" end="47" condition="Integer.IsEqual($PARAM[info],47)">Conditional</animation>
        <animation effect="fade" start="100" end="48" condition="Integer.IsEqual($PARAM[info],48)">Conditional</animation>
        <animation effect="fade" start="100" end="49" condition="Integer.IsEqual($PARAM[info],49)">Conditional</animation>
        <animation effect="fade" start="100" end="50" condition="Integer.IsEqual($PARAM[info],50)">Conditional</animation>
        <animation effect="fade" start="100" end="51" condition="Integer.IsEqual($PARAM[info],51)">Conditional</animation>
        <animation effect="fade" start="100" end="52" condition="Integer.IsEqual($PARAM[info],52)">Conditional</animation>
        <animation effect="fade" start="100" end="53" condition="Integer.IsEqual($PARAM[info],53)">Conditional</animation>
        <animation effect="fade" start="100" end="54" condition="Integer.IsEqual($PARAM[info],54)">Conditional</animation>
        <animation effect="fade" start="100" end="55" condition="Integer.IsEqual($PARAM[info],55)">Conditional</animation>
        <animation effect="fade" start="100" end="56" condition="Integer.IsEqual($PARAM[info],56)">Conditional</animation>
        <animation effect="fade" start="100" end="57" condition="Integer.IsEqual($PARAM[info],57)">Conditional</animation>
        <animation effect="fade" start="100" end="58" condition="Integer.IsEqual($PARAM[info],58)">Conditional</animation>
        <animation effect="fade" start="100" end="59" condition="Integer.IsEqual($PARAM[info],59)">Conditional</animation>
        <animation effect="fade" start="100" end="60" condition="Integer.IsEqual($PARAM[info],60)">Conditional</animation>
        <animation effect="fade" start="100" end="61" condition="Integer.IsEqual($PARAM[info],61)">Conditional</animation>
        <animation effect="fade" start="100" end="62" condition="Integer.IsEqual($PARAM[info],62)">Conditional</animation>
        <animation effect="fade" start="100" end="63" condition="Integer.IsEqual($PARAM[info],63)">Conditional</animation>
        <animation effect="fade" start="100" end="64" condition="Integer.IsEqual($PARAM[info],64)">Conditional</animation>
        <animation effect="fade" start="100" end="65" condition="Integer.IsEqual($PARAM[info],65)">Conditional</animation>
        <animation effect="fade" start="100" end="66" condition="Integer.IsEqual($PARAM[info],66)">Conditional</animation>
        <animation effect="fade" start="100" end="67" condition="Integer.IsEqual($PARAM[info],67)">Conditional</animation>
        <animation effect="fade" start="100" end="68" condition="Integer.IsEqual($PARAM[info],68)">Conditional</animation>
        <animation effect="fade" start="100" end="69" condition="Integer.IsEqual($PARAM[info],69)">Conditional</animation>
        <animation effect="fade" start="100" end="70" condition="Integer.IsEqual($PARAM[info],70)">Conditional</animation>
        <animation effect="fade" start="100" end="71" condition="Integer.IsEqual($PARAM[info],71)">Conditional</animation>
        <animation effect="fade" start="100" end="72" condition="Integer.IsEqual($PARAM[info],72)">Conditional</animation>
        <animation effect="fade" start="100" end="73" condition="Integer.IsEqual($PARAM[info],73)">Conditional</animation>
        <animation effect="fade" start="100" end="74" condition="Integer.IsEqual($PARAM[info],74)">Conditional</animation>
        <animation effect="fade" start="100" end="75" condition="Integer.IsEqual($PARAM[info],75)">Conditional</animation>
        <animation effect="fade" start="100" end="76" condition="Integer.IsEqual($PARAM[info],76)">Conditional</animation>
        <animation effect="fade" start="100" end="77" condition="Integer.IsEqual($PARAM[info],77)">Conditional</animation>
        <animation effect="fade" start="100" end="78" condition="Integer.IsEqual($PARAM[info],78)">Conditional</animation>
        <animation effect="fade" start="100" end="79" condition="Integer.IsEqual($PARAM[info],79)">Conditional</animation>
        <animation effect="fade" start="100" end="80" condition="Integer.IsEqual($PARAM[info],80)">Conditional</animation>
        <animation effect="fade" start="100" end="81" condition="Integer.IsEqual($PARAM[info],81)">Conditional</animation>
        <animation effect="fade" start="100" end="82" condition="Integer.IsEqual($PARAM[info],82)">Conditional</animation>
        <animation effect="fade" start="100" end="83" condition="Integer.IsEqual($PARAM[info],83)">Conditional</animation>
        <animation effect="fade" start="100" end="84" condition="Integer.IsEqual($PARAM[info],84)">Conditional</animation>
        <animation effect="fade" start="100" end="85" condition="Integer.IsEqual($PARAM[info],85)">Conditional</animation>
        <animation effect="fade" start="100" end="86" condition="Integer.IsEqual($PARAM[info],86)">Conditional</animation>
        <animation effect="fade" start="100" end="87" condition="Integer.IsEqual($PARAM[info],87)">Conditional</animation>
        <animation effect="fade" start="100" end="88" condition="Integer.IsEqual($PARAM[info],88)">Conditional</animation>
        <animation effect="fade" start="100" end="89" condition="Integer.IsEqual($PARAM[info],89)">Conditional</animation>
        <animation effect="fade" start="100" end="90" condition="Integer.IsEqual($PARAM[info],90)">Conditional</animation>
        <animation effect="fade" start="100" end="91" condition="Integer.IsEqual($PARAM[info],91)">Conditional</animation>
        <animation effect="fade" start="100" end="92" condition="Integer.IsEqual($PARAM[info],92)">Conditional</animation>
        <animation effect="fade" start="100" end="93" condition="Integer.IsEqual($PARAM[info],93)">Conditional</animation>
        <animation effect="fade" start="100" end="94" condition="Integer.IsEqual($PARAM[info],94)">Conditional</animation>
        <animation effect="fade" start="100" end="95" condition="Integer.IsEqual($PARAM[info],95)">Conditional</animation>
        <animation effect="fade" start="100" end="96" condition="Integer.IsEqual($PARAM[info],96)">Conditional</animation>
        <animation effect="fade" start="100" end="97" condition="Integer.IsEqual($PARAM[info],97)">Conditional</animation>
        <animation effect="fade" start="100" end="98" condition="Integer.IsEqual($PARAM[info],98)">Conditional</animation>
        <animation effect="fade" start="100" end="99" condition="Integer.IsEqual($PARAM[info],99)">Conditional</animation>
    </include>

    <variable name="Defs_Progress_Rating">
        <value condition="Integer.IsEqual(ListItem.Rating,10)">100</value>
        <value condition="Integer.IsEqual(ListItem.Rating,9)">90</value>
        <value condition="Integer.IsEqual(ListItem.Rating,8)">80</value>
        <value condition="Integer.IsEqual(ListItem.Rating,7)">70</value>
        <value condition="Integer.IsEqual(ListItem.Rating,6)">60</value>
        <value condition="Integer.IsEqual(ListItem.Rating,5)">50</value>
        <value condition="Integer.IsEqual(ListItem.Rating,4)">40</value>
        <value condition="Integer.IsEqual(ListItem.Rating,3)">30</value>
        <value condition="Integer.IsEqual(ListItem.Rating,2)">20</value>
        <value condition="Integer.IsEqual(ListItem.Rating,1)">10</value>
        <value>0</value>
    </variable>

    <include name="Defs_Progress_Colorfade">
        <include content="Defs_Progress_Colorfader">
            <param name="info" value="Control.GetLabel($PARAM[id])" />
        </include>
    </include>

    <variable name="Defs_ScreensaverWidget_Target">
        <value condition="!String.IsEmpty(Skin.String(screensaver.arctic.mirage.target))">$INFO[Skin.String(screensaver.arctic.mirage.target)]</value>
        <value>videos</value>
    </variable>
    <variable name="Defs_ScreensaverWidget">
        <value condition="!String.IsEmpty(Skin.String(screensaver.arctic.mirage.path))">$INFO[Skin.String(screensaver.arctic.mirage.path)]</value>
        <value>special://skin/extras/playlists/RandomMovies.xsp</value>
    </variable>

    <include name="Defs_Search_Button">
        <include>Texture_Box_Highlight_Focus_H</include>
        <texturenofocus border="12" colordiffuse="main_fg_12">common/box.png</texturenofocus>
        <height>80</height>
        <textoffsetx>30</textoffsetx>
        <align>left</align>
        <font>font_main</font>
        <textcolor>main_fg_70</textcolor>
    </include>

    <include name="Defs_PauseAtEnd_Value">
        <pauseatend>$PARAM[time]</pauseatend>
    </include>

    <include name="Defs_PauseAtEnd">
        <include content="Defs_AutoScroll">
            <param name="include" value="Defs_PauseAtEnd_Value" />
        </include>
    </include>

    <include name="Defs_TimePerImage_Value">
        <timeperimage>$PARAM[time]</timeperimage>
    </include>

    <include name="Defs_TimePerImage">
        <include content="Defs_AutoScroll">
            <param name="include" value="Defs_TimePerImage_Value" />
        </include>
    </include>

    <include name="Defs_AutoScroll_Value">
        <autoscroll time="$PARAM[time]">$PARAM[condition]</autoscroll>
    </include>
    <include name="Defs_AutoScroll_TextBox_Value">
        <autoscroll delay="$PARAM[time]" repeat="$PARAM[time]" time="3000">$PARAM[condition]</autoscroll>
    </include>

    <include name="Defs_AutoScroll_TextBox">
        <include content="Defs_AutoScroll">
            <param name="include">Defs_AutoScroll_TextBox_Value</param>
            <param name="condition">$PARAM[condition]</param>
        </include>
    </include>

    <include name="Defs_AutoScroll">
        <param name="include" default="Defs_AutoScroll_Value" />
        <definition>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),5s)">
                <param name="time" value="5000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),8s)">
                <param name="time" value="8000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),10s)">
                <param name="time" value="10000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),12s) | String.IsEmpty(Skin.String(AutoScrollTime))">
                <param name="time" value="12000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),15s)">
                <param name="time" value="15000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),20s)">
                <param name="time" value="20000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),30s)">
                <param name="time" value="30000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),60s)">
                <param name="time" value="60000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScrollTime),10m)">
                <param name="time" value="600000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
        </definition>
    </include>

    <include name="Defs_TMDbHelper_Loader">
        <include>Info_Title_Label_Hidden</include>
        <include content="Object_Hidden_List">
            <param name="id">99950</param>
        </include>
    </include>


</includes>
