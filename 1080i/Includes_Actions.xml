<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Action_SkinShortcuts_ContentType_AutoSetOnFocus">
        <onfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customProperty,widgetTarget)</onfocus>
        <onfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customValue,$VAR[Action_SkinShortcuts_ContentType])</onfocus>
        <onfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SendClick(404)</onfocus>
    </include>
    <include name="Action_SkinShortcuts_ContentType_AutoSetOnUnFocus">
        <onunfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customProperty,widgetTarget)</onunfocus>
        <onunfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SetProperty(customValue,$VAR[Action_SkinShortcuts_ContentType])</onunfocus>
        <onunfocus condition="String.IsEmpty(Container(211).ListItem.Property(widgetTarget))">SendClick(404)</onunfocus>
    </include>

    <variable name="Action_SkinShortcuts_ContentType">
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Video)">videos</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Music)">music</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Program)">programs</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,Picture)">pictures</value>
        <value condition="String.StartsWith(Container(211).ListItem.Label2,PVR)">tvguide</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Videos)">videos</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Music)">music</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Programs)">programs</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),Pictures)">pictures</value>
        <value condition="String.Contains(Container(211).ListItem.Property(path),pvr://)">tvguide</value>
    </variable>

    <include name="Action_OSD_Button_OnFocus">
        <onfocus condition="!String.IsEmpty(Skin.String(OSD_Timeout))">AlarmClock(osd_timeout,SetFocus(99997),$INFO[Skin.String(OSD_Timeout),00:,],silent)</onfocus>
        <onunfocus>CancelAlarm(osd_timeout,true)</onunfocus>
    </include>


    <include name="Action_OptionsMenu_Default">
        <param name="id" default="50" />
        <definition>
            <onleft>$PARAM[id]</onleft>
            <onright>$PARAM[id]</onright>
            <onback>$PARAM[id]</onback>
        </definition>
    </include>

    <include name="Action_OptionsMenu_HomeWrap">
        <definition>
            <onleft condition="Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300,9999,absolute)</onleft>
            <onright condition="Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300,0,absolute)</onright>
            <onback condition="Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300)</onback>
            <onback condition="!Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300)</onback>
            <onleft condition="!Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300)</onleft>
            <onright condition="!Skin.HasSetting(Home.DisableSearchMenu)">SetFocus(300)</onright>
        </definition>
    </include>

    <include name="Action_OptionsMenu_PVRGuide">
        <onleft>10</onleft>
        <onright>10</onright>
    </include>

    <include name="Action_OptionsMenu_ButtonMenu">
        <onleft>Close</onleft>
        <onright>Close</onright>
    </include>

    <include name="Action_Row_OnDown">
        <ondown condition="$EXP[Exp_AlphabetTypes_Only] + !Skin.HasSetting(DisableAlphabetScrollbar)">65</ondown>
        <ondown condition="!$EXP[Exp_AlphabetTypes_Only] | Skin.HasSetting(DisableAlphabetScrollbar)">60</ondown>
    </include>

    <include name="Action_Row_Recommendations_OnDown">
        <ondown>SetFocus(99996)</ondown>
    </include>

    <include name="Action_Row_WallView_OnDown">
        <ondown condition="[Container.HasNext | Container.HasPrevious] + [Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(57)]">SetProperty(WallMode,$INFO[Container.FolderPath])</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(50)">SetFocus(506)</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(51)">SetFocus(516)</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(52)">SetFocus(526)</ondown>
        <ondown condition="[Container.HasNext | Container.HasPrevious] + Control.IsVisible(57)">SetFocus(576)</ondown>
    </include>

    <include name="Action_Widget_Refocus_Click">
        <onclick>SetFocus(5004)</onclick>
        <onclick>SetFocus(5003)</onclick>
        <onclick>SetFocus(5002)</onclick>
        <onclick>SetFocus(5001)</onclick>
        <onclick>SetFocus(5000)</onclick>
    </include>

    <include name="Action_LibraryInfoWidget_Click">
        <definition>
            <onclick>SetFocus(50)</onclick>
            <onclick>SetFocus(5000)</onclick>
            <onclick condition="String.IsEqual(Container($PARAM[id]).ListItem.DBType,movie)">AlarmClock(redirect,RunScript(plugin.video.themoviedb.helper,add_path='"$INFO[Container($PARAM[id]).ListItem.Title,videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22,%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D]"',call_auto=1190),00:01,silent)</onclick>
            <onclick condition="String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow)">AlarmClock(redirect,RunScript(plugin.video.themoviedb.helper,add_path='"$INFO[Container($PARAM[id]).ListItem.TVShowTitle,videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22,%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D]"',call_auto=1190),00:01,silent)</onclick>
            <onclick condition="String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)">AlarmClock(redirect,RunScript(plugin.video.themoviedb.helper,add_path='"videodb://tvshows/titles/-1/-1/-1/-1/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22tvshow%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[Container($PARAM[id]).ListItem.TVShowtitle]%22%5d%7d%2c%7b%22field%22%3a%22season%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[Container($PARAM[id]).ListItem.Season]%22%5d%7d%2c%7b%22field%22%3a%22episode%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[Container($PARAM[id]).ListItem.Episode]%22%5d%7d%5d%7d%2c%22type%22%3a%22episodes%22%7d"',call_auto=1190),00:01,silent)</onclick>
        </definition>
    </include>

    <include name="Action_Widget_Play_Click">
        <include>Action_Widget_Refocus_Click</include>
        <onclick>Close</onclick>
        <onclick condition="!Window.IsVisible(MyVideoNav.xml)">AlarmClock(callinfo,RunScript(plugin.video.themoviedb.helper,close_dialog=1190,call_path=$INFO[Container($PARAM[id]).ListItem.FolderPath]),00:01,silent)</onclick>
        <onclick condition="Window.IsVisible(MyVideoNav.xml)">AlarmClock(callinfo,RunScript(plugin.video.themoviedb.helper,close_dialog=1190,call_update=$INFO[Container($PARAM[id]).ListItem.FolderPath]),00:01,silent)</onclick>
    </include>

    <include name="Action_Recommendations_OnFocus">
        <nested />
        <onfocus>SetProperty(TMDbHelper.Recommendations.Logo,$ESCINFO[Container(99950).ListItem.Art(cropimage)],Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Set,'"$VAR[Label_Set]"',Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Director,'"$VAR[Path_FromDirector_Name]"',Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Writer,'"$VAR[Path_FromWriter_Screenplay]"',Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Studio,'$ESCINFO[Container(99950).ListItem.Property(Studio.1.Name)]',Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Genre,'$ESCINFO[Container(99950).ListItem.Property(Genre.1.Name)]',Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Year,'$ESCINFO[ListItem.Year]',Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Youtube,'"$VAR[Path_Youtube]"',Home)</onfocus>
        <onfocus>SetProperty(TMDbHelper.WinProp.Title,'"$VAR[Label_Title]"',Home)</onfocus>
        <onfocus condition="String.IsEqual(ListItem.DBtype,movie) | String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,season) | String.IsEqual(ListItem.DBtype,episode) | String.IsEqual(ListItem.DBtype,set) | $EXP[Exp_IsPersonInfo] | [Window.IsVisible(DialogPVRInfo.xml) + !String.IsEmpty(Container(99950).ListItem.UniqueId(tmdb))]">Runscript(plugin.video.themoviedb.helper,recommendations=$VAR[Path_Recs],$VAR[Path_Recs_Query],$VAR[Path_Recs_Type],context=ActivateWindow(1113),window_id=1191,setproperty=HideView,winprop_clearlogo='$ESCINFO[Container(99950).ListItem.Art(cropimage)]',winprop_Collection=$WINPROP[Set],winprop_Director=$WINPROP[Director],winprop_Writer=$WINPROP[Writer],winprop_Genre=$WINPROP[Genre],winprop_Studio=$WINPROP[Studio],winprop_Year=$WINPROP[Year],winprop_Youtube=$WINPROP[Youtube],winprop_Fanart='$ESCINFO[ListItem.Art(fanart)]',winprop_Title=$WINPROP[Title])</onfocus>
    </include>

    <include name="Action_Settings_Onload">
        <onload condition="Window.IsActive(skinsettings)">SetFocus(30001)</onload>
        <onload condition="Window.IsActive(interfacesettings)">SetFocus(30002)</onload>
        <onload condition="Window.IsActive(mediasettings)">SetFocus(30003)</onload>
        <onload condition="Window.IsActive(playersettings)">SetFocus(30004)</onload>
        <onload condition="Window.IsActive(systemsettings)">SetFocus(30005)</onload>
        <onload condition="Window.IsActive(servicesettings)">SetFocus(30006)</onload>
        <onload condition="Window.IsActive(pvrsettings)">SetFocus(30007)</onload>
        <onload condition="Window.IsActive(systeminfo)">SetFocus(30008)</onload>
        <onload condition="Window.IsActive(profiles)">SetFocus(30009)</onload>
    </include>


    <include name="_Action_Blur_Onload">
        <param name="sourceimage">Art(fanart)</param>
        <definition>
            <onload>SetProperty(TMDbHelper.Blur.SourceImage,$PARAM[sourceimage],Home)</onload>
            <onload>SetProperty(TMDbHelper.Blur.Fallback,$VAR[Image_SimpleBackground],Home)</onload>
        </definition>
    </include>
    <include name="Action_Blur_Onload">
        <include content="_Action_Blur_Onload" condition="Skin.HasSetting(PVR.DisableEPGEventIconFanart)">
            <param name="sourceimage">Art(fanart)|Property(fanart)</param>
        </include>
        <include content="_Action_Blur_Onload" condition="!Skin.HasSetting(PVR.DisableEPGEventIconFanart)">
            <param name="sourceimage">Art(fanart)|Property(fanart)||EPGEventIcon</param>
        </include>
    </include>

    <include name="Action_BuildTextures_Onload">
        <onload>RunScript(script.texturemaker,bg=$VAR[ColorHighlight],fg=$VAR[ColorGradient],alpha=1.0,folder=ArcticHorizon,selectbox=special://skin/extras/textures/selectbox.png,selectbox_thin=special://skin/extras/textures/selectbox_thin.png,scrollv=special://skin/extras/textures/scrollv.png,scrollh=special://skin/extras/textures/scrollh.png,box=special://skin/extras/textures/box.png,circle=special://skin/extras/textures/circle.png,menu=special://skin/extras/textures/menu.png,menumain+overlay+slicing{240|80}=special://skin/extras/textures/menumain.png,main=special://skin/extras/textures/main.png,circlebutton+overlay=special://skin/extras/textures/circlebutton.png,glow=special://skin/extras/textures/glow.png,no_reload)</onload>
    </include>
    <include name="Action_BuildTextures_Onclick">
        <onclick condition="!String.IsEqual(Window(Home).Property(ColorPicker_Type),Indicator)">runscript(script.texturemaker,bg=$VAR[ColorHighlight],fg=$VAR[ColorGradient],alpha=1.0,folder=ArcticHorizon,selectbox=special://skin/extras/textures/selectbox.png,selectbox_thin=special://skin/extras/textures/selectbox_thin.png,scrollv=special://skin/extras/textures/scrollv.png,scrollh=special://skin/extras/textures/scrollh.png,box=special://skin/extras/textures/box.png,circle=special://skin/extras/textures/circle.png,menu=special://skin/extras/textures/menu.png,menumain+overlay+slicing{240|80}=special://skin/extras/textures/menumain.png,main=special://skin/extras/textures/main.png,circlebutton+overlay=special://skin/extras/textures/circlebutton.png,glow=special://skin/extras/textures/glow.png,reload=1111)</onclick>
    </include>
    <include name="Action_BuildTextures_Onclick_Preset">
        <onclick>runscript(script.texturemaker,bg=$VAR[ColorHighlight],fg=$VAR[ColorGradient],alpha=1.0,folder=ArcticHorizon,selectbox=special://skin/extras/textures/selectbox.png,selectbox_thin=special://skin/extras/textures/selectbox_thin.png,scrollv=special://skin/extras/textures/scrollv.png,scrollh=special://skin/extras/textures/scrollh.png,box=special://skin/extras/textures/box.png,circle=special://skin/extras/textures/circle.png,menu=special://skin/extras/textures/menu.png,menumain+overlay+slicing{240|80}=special://skin/extras/textures/menumain.png,main=special://skin/extras/textures/main.png,circlebutton+overlay=special://skin/extras/textures/circlebutton.png,glow=special://skin/extras/textures/glow.png,reload=1115)</onclick>
    </include>
</includes>