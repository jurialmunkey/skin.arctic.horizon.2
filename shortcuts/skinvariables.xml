<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <variable name="Image_Poster" containers="5000">
        <value condition="!String.IsEmpty({listitemposition}.Art(poster))">$INFO[{listitemposition}.Art(poster)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(tvshow.poster))">$INFO[{listitemposition}.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Icon)">$INFO[{listitemposition}.Icon]</value>
    </variable>

    <variable name="Defs_PercentPlayed" containers="50">
        <value condition="Window.IsVisible(AddonBrowser.xml) + String.EndsWith({listitemposition}.Label2,%)">$INFO[{listitemposition}.Label2]</value>
        <value condition="!String.IsEmpty({listitemposition}.Property(WatchedProgress)) + !Integer.IsEqual({listitemposition}.Property(WatchedProgress),0) + [!Integer.IsEqual({listitemposition}.Property(WatchedProgress),100) | !Skin.HasSetting(Indicator.DisableWatched)]">$INFO[{listitemposition}.Property(WatchedProgress)]</value>
        <value condition="!String.IsEmpty({listitemposition}.PercentPlayed) + [!Integer.IsEqual({listitemposition}.PercentPlayed,0) | {listitemposition}.IsResumable]">$INFO[{listitemposition}.PercentPlayed]</value>
        <value condition="!Integer.IsEqual({listitemposition}.Progress,0) + $EXP[Exp_WidgetWindow]">$VAR[Defs_PercentPlayed_Progress{cid}{lid}]</value>
        <value condition="String.IsEqual({listitemposition}.Overlay,OverlayWatched.png) + !Skin.HasSetting(Indicator.DisableWatched)">100</value>
        <value condition="Integer.IsGreater({listitemposition}.PlayCount,0) + !String.IsEqual({listitemposition}.DBType,song) + !String.IsEqual({listitemposition}.DBType,album) + !String.IsEqual({listitemposition}.DBType,artist) + !String.IsEqual({listitemposition}.DBType,image) + !String.IsEqual({listitemposition}.DBType,addon) + !Skin.HasSetting(Indicator.DisableWatched)">100</value>
    </variable>

    <variable name="Defs_PercentPlayed_Progress" containers="50">
        <value condition="Integer.IsEqual({listitemposition}.Progress,1)">$NUMBER[1]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,2)">$NUMBER[2]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,3)">$NUMBER[3]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,4)">$NUMBER[4]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,5)">$NUMBER[5]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,6)">$NUMBER[6]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,7)">$NUMBER[7]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,8)">$NUMBER[8]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,9)">$NUMBER[9]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,10)">$NUMBER[10]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,11)">$NUMBER[11]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,12)">$NUMBER[12]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,13)">$NUMBER[13]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,14)">$NUMBER[14]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,15)">$NUMBER[15]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,16)">$NUMBER[16]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,17)">$NUMBER[17]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,18)">$NUMBER[18]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,19)">$NUMBER[19]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,20)">$NUMBER[20]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,21)">$NUMBER[21]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,22)">$NUMBER[22]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,23)">$NUMBER[23]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,24)">$NUMBER[24]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,25)">$NUMBER[25]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,26)">$NUMBER[26]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,27)">$NUMBER[27]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,28)">$NUMBER[28]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,29)">$NUMBER[29]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,30)">$NUMBER[30]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,31)">$NUMBER[31]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,32)">$NUMBER[32]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,33)">$NUMBER[33]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,34)">$NUMBER[34]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,35)">$NUMBER[35]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,36)">$NUMBER[36]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,37)">$NUMBER[37]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,38)">$NUMBER[38]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,39)">$NUMBER[39]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,40)">$NUMBER[40]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,41)">$NUMBER[41]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,42)">$NUMBER[42]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,43)">$NUMBER[43]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,44)">$NUMBER[44]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,45)">$NUMBER[45]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,46)">$NUMBER[46]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,47)">$NUMBER[47]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,48)">$NUMBER[48]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,49)">$NUMBER[49]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,50)">$NUMBER[50]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,51)">$NUMBER[51]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,52)">$NUMBER[52]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,53)">$NUMBER[53]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,54)">$NUMBER[54]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,55)">$NUMBER[55]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,56)">$NUMBER[56]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,57)">$NUMBER[57]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,58)">$NUMBER[58]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,59)">$NUMBER[59]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,60)">$NUMBER[60]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,61)">$NUMBER[61]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,62)">$NUMBER[62]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,63)">$NUMBER[63]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,64)">$NUMBER[64]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,65)">$NUMBER[65]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,66)">$NUMBER[66]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,67)">$NUMBER[67]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,68)">$NUMBER[68]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,69)">$NUMBER[69]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,70)">$NUMBER[70]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,71)">$NUMBER[71]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,72)">$NUMBER[72]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,73)">$NUMBER[73]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,74)">$NUMBER[74]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,75)">$NUMBER[75]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,76)">$NUMBER[76]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,77)">$NUMBER[77]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,78)">$NUMBER[78]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,79)">$NUMBER[79]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,80)">$NUMBER[80]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,81)">$NUMBER[81]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,82)">$NUMBER[82]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,83)">$NUMBER[83]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,84)">$NUMBER[84]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,85)">$NUMBER[85]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,86)">$NUMBER[86]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,87)">$NUMBER[87]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,88)">$NUMBER[88]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,89)">$NUMBER[89]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,90)">$NUMBER[90]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,91)">$NUMBER[91]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,92)">$NUMBER[92]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,93)">$NUMBER[93]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,94)">$NUMBER[94]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,95)">$NUMBER[95]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,96)">$NUMBER[96]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,97)">$NUMBER[97]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,98)">$NUMBER[98]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,99)">$NUMBER[99]</value>
        <value condition="Integer.IsEqual({listitemposition}.Progress,100)">$NUMBER[100]</value>
    </variable>

    <variable name="Label_Title" containers="50,591,503,513,523,573,301" parent="Control.HasFocus({id})">
        <value condition="!String.IsEmpty({listitemposition}.TvShowTitle)">$INFO[{listitemposition}.TvShowTitle]</value>
        <value condition="!String.IsEmpty({listitemposition}.AlbumArtist) + [String.IsEqual({listitemposition}.DBType,song) | String.IsEqual({listitemposition}.DBType,album)]">$INFO[{listitemposition}.AlbumArtist]</value>
        <value condition="!String.IsEmpty({listitemposition}.Artist) + [String.IsEqual({listitemposition}.DBType,song) | String.IsEqual({listitemposition}.DBType,album)]">$INFO[{listitemposition}.Artist]</value>
        <value condition="!String.IsEmpty({listitemposition}.Title)">$INFO[{listitemposition}.Title]</value>
        <value condition="!String.IsEmpty({listitemposition}.Label)">$INFO[{listitemposition}.Label]</value>
    </variable>

    <variable name="Label_Plot" containers="50,591,503,513,523,573,301" parent="Control.HasFocus({id})">
        <value condition="!String.IsEmpty({listitemposition}.Property(Artist_Description))">$INFO[{listitemposition}.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Property(Album_Description))">$INFO[{listitemposition}.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty({listitemposition}.AddonDescription)">$INFO[{listitemposition}.AddonDescription]</value>
        <value condition="String.IsEqual({listitemposition}.DBType,episode) + !String.IsEmpty({listitemposition}.Plot)">$INFO[{listitemposition}.Title,[B], ~ [/B]]$INFO[{listitemposition}.Plot]</value>
        <value condition="!String.IsEmpty({listitemposition}.Plot)">$INFO[{listitemposition}.Plot]</value>
        <value condition="!String.IsEmpty({listitemposition}.Property(biography))">$INFO[{listitemposition}.Property(biography)]</value>
        <value condition="!String.IsEmpty(Container(99950).ListItem.Plot)">$INFO[Container(99950).ListItem.Plot]</value>
        <value condition="Window.IsMedia + Control.IsVisible(502)">$INFO[Container(503).ListItemAbsolute(0).Label]$INFO[Container(503).ListItemAbsolute(1).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(2).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(3).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(4).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(5).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(6).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(7).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(8).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(9).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(10).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(11).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(12).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(13).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(14).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(15).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(16).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(17).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(18).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(19).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(20).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(21).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(22).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(23).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(24).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(25).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(26).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(27).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(28).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(29).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(30).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(31).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(32).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(33).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(34).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(35).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(36).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(37).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(38).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(39).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(40).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(41).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(42).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(43).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(44).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(45).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(46).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(47).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(48).Label,$COMMA ,]$INFO[Container(503).ListItemAbsolute(49).Label,$COMMA ,]</value>
        <value condition="Window.IsMedia + Control.IsVisible(512)">$INFO[Container(513).ListItemAbsolute(0).Label]$INFO[Container(513).ListItemAbsolute(1).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(2).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(3).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(4).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(5).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(6).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(7).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(8).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(9).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(10).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(11).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(12).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(13).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(14).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(15).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(16).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(17).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(18).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(19).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(20).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(21).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(22).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(23).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(24).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(25).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(26).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(27).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(28).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(29).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(30).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(31).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(32).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(33).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(34).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(35).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(36).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(37).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(38).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(39).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(40).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(41).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(42).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(43).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(44).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(45).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(46).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(47).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(48).Label,$COMMA ,]$INFO[Container(513).ListItemAbsolute(49).Label,$COMMA ,]</value>
        <value condition="Window.IsMedia + Control.IsVisible(522)">$INFO[Container(523).ListItemAbsolute(0).Label]$INFO[Container(523).ListItemAbsolute(1).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(2).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(3).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(4).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(5).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(6).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(7).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(8).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(9).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(10).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(11).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(12).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(13).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(14).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(15).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(16).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(17).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(18).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(19).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(20).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(21).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(22).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(23).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(24).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(25).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(26).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(27).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(28).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(29).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(30).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(31).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(32).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(33).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(34).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(35).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(36).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(37).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(38).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(39).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(40).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(41).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(42).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(43).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(44).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(45).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(46).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(47).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(48).Label,$COMMA ,]$INFO[Container(523).ListItemAbsolute(49).Label,$COMMA ,]</value>
        <value condition="Window.IsMedia + Control.IsVisible(99999) + !Container(99999).IsUpdating">$INFO[Container(99999).ListItemAbsolute(0).Label]$INFO[Container(99999).ListItemAbsolute(1).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(2).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(3).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(4).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(5).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(6).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(7).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(8).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(9).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(10).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(11).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(12).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(13).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(14).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(15).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(16).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(17).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(18).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(19).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(20).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(21).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(22).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(23).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(24).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(25).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(26).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(27).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(28).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(29).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(30).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(31).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(32).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(33).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(34).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(35).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(36).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(37).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(38).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(39).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(40).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(41).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(42).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(43).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(44).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(45).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(46).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(47).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(48).Label,$COMMA ,]$INFO[Container(99999).ListItemAbsolute(49).Label,$COMMA ,]</value>
    </variable>

    <variable name="Image_AddonsOrigin" containers="50">
        <value condition="{listitemposition}.Property(Addon.IsFromOfficialRepo) + {listitemposition}.IsAutoUpdateable">indicator/official.png</value>
        <value condition="{listitemposition}.Property(Addon.IsFromOfficialRepo)">indicator/official-pinned.png</value>
        <value condition="String.IsEqual({listitemposition}.AddonOrigin,$LOCALIZE[25014]) + {listitemposition}.IsAutoUpdateable">indicator/manual.png</value>
        <value condition="String.IsEqual({listitemposition}.AddonOrigin,$LOCALIZE[25014])">indicator/manual-pinned.png</value>
        <value condition="{listitemposition}.IsAutoUpdateable">indicator/install.png</value>
        <value>indicator/install-pinned.png</value>
    </variable>

    <variable name="Image_VideoQuality" containers="50,591,503,513,523,573,301" parent="Control.HasFocus({id})">
        <value condition="{listitemposition}.IsCollection">flags/quality/sets.png</value>
        <value condition="Integer.IsGreater({listitemposition}.VideoResolution,1080) | String.IsEqual({listitemposition}.VideoResolution,4K)">flags/quality/4k.png</value>
        <value condition="Integer.IsGreater({listitemposition}.VideoResolution,720)">flags/quality/fhd.png</value>
        <value condition="Integer.IsGreater({listitemposition}.VideoResolution,719)">flags/quality/hd.png</value>
        <value condition="!String.IsEmpty({listitemposition}.VideoResolution)">flags/quality/sd.png</value>
        <value condition="[String.IsEqual({listitemposition}.DBType,movie) | String.IsEqual({listitemposition}.DBType,episode) | String.IsEqual({listitemposition}.DBType,video)] + !String.IsEqual({listitemposition}.Property(item.type),person)">flags/quality/web.png</value>
        <value>flags/quality/info.png</value>
    </variable>

    <variable name="Image_Banner" containers="50">
        <value condition="!String.IsEmpty({listitemposition}.Art(banner))">$INFO[{listitemposition}.Art(banner)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(season.banner))">$INFO[{listitemposition}.Art(season.banner)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(tvshow.banner))">$INFO[{listitemposition}.Art(tvshow.banner)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(fanart))">$INFO[{listitemposition}.Art(fanart)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(tvshow.fanart))">$INFO[{listitemposition}.Art(tvshow.fanart)]</value>
    </variable>

    <variable name="Image_Landscape" containers="50">
        <value condition="Container.Content(images)">$INFO[{listitemposition}.Icon]</value>
        <value condition="[String.IsEqual({listitemposition}.DBType,episode) | String.IsEqual({listitemposition}.DBType,video)] + !String.IsEmpty({listitemposition}.Art(thumb)) + !String.IsEqual({listitemposition}.Icon,{listitemposition}.Art(fanart)) + !String.IsEqual({listitemposition}.Icon,OverlaySpoiler.png) + !String.IsEqual({listitemposition}.Art(thumb),{listitemposition}.Art(poster)) + !String.IsEqual({listitemposition}.Art(thumb),{listitemposition}.Art(tvshow.poster))">$INFO[{listitemposition}.Art(thumb)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(landscape)) + !Skin.HasSetting(DisableLandscapeArt)">$INFO[{listitemposition}.Art(landscape)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(tvshow.landscape)) + !Skin.HasSetting(DisableLandscapeArt)">$INFO[{listitemposition}.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(fanart))">$INFO[{listitemposition}.Art(fanart)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(tvshow.fanart))">$INFO[{listitemposition}.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty({listitemposition}.Property(fanart))">$INFO[{listitemposition}.Property(fanart)]</value>
        <value condition="!String.IsEmpty({listitemposition}.EPGEventIcon)">$INFO[{listitemposition}.EPGEventIcon]</value>
        <value condition="!String.IsEmpty({listitemposition}.Art(thumb))">$INFO[{listitemposition}.Art(thumb)]</value>
        <value>$INFO[{listitemposition}.Icon]</value>
    </variable>

    <variable name="Image_Overlay" containers="50">

        <!-- Unwatched Episodes -->
        <value condition="[String.IsEqual({listitemposition}.DBType,tvshow) | String.IsEqual({listitemposition}.DBType,season) | String.IsEqual({listitemposition}.DBType,episode)] + !Integer.IsEqual({listitemposition}.Property(UnWatchedEpisodes),0) + !{listitemposition}.IsResumable + !Skin.HasSetting(Indicator.DisableEpisodes)">common/null.png</value>
		
        <!-- PVR Timers / Recording -->
        <value condition="{listitemposition}.IsRecording">indicator/record.png</value>
        <value condition="{listitemposition}.HasTimer">indicator/timer.png</value>

        <!-- Progress / Resume -->
        <value condition="{listitemposition}.IsResumable + !Skin.HasSetting(Indicator.DisableProgress)">indicator/timer.png</value>
        <value condition="!Integer.IsEqual({listitemposition}.Progress,0) + $EXP[Exp_WidgetWindow] + !Skin.HasSetting(Indicator.DisableProgress)">indicator/unwatched.png</value>

        <!-- Watched -->
        <value condition="String.IsEqual({listitemposition}.Overlay,OverlayWatched.png) + !Skin.HasSetting(Indicator.DisableWatched)">common/null.png</value>
        <value condition="Integer.IsGreater({listitemposition}.PlayCount,0) + !String.IsEqual({listitemposition}.DBType,song) + !String.IsEqual({listitemposition}.DBType,album) + !String.IsEqual({listitemposition}.DBType,artist) + !String.IsEqual({listitemposition}.DBType,image) + !String.IsEqual({listitemposition}.DBType,addon) + !Skin.HasSetting(Indicator.DisableWatched)">common/null.png</value>

        <!-- New Movie -->
        <value condition="String.IsEqual({listitemposition}.Overlay,OverlayUnwatched.png) + String.IsEqual({listitemposition}.DBType,movie) + [String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.1.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.2.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.3.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.4.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.5.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.6.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.7.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.8.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.9.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.10.Title))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/new.png</value>

        <!-- New Episode -->
        <value condition="String.IsEqual({listitemposition}.Overlay,OverlayUnwatched.png) + String.IsEqual({listitemposition}.DBType,episode) + [String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.1.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.2.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.3.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.4.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.5.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.6.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.7.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.8.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.9.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.10.EpisodeTitle))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/new.png</value>

        <!-- Is Library DBID -->
        <value condition="!String.IsEmpty({listitemposition}.Property(Item.Info)) + !String.IsEmpty({listitemposition}.DBID) + !Skin.HasSetting(Indicator.DisableLibrary)">indicator/library.png</value>

        <!-- Is Collection -->
        <value condition="{listitemposition}.IsCollection + !Skin.HasSetting(Indicator.DisableCollection)">indicator/movieset.png</value>

        <!-- Add-on Status -->
        <value condition="Window.IsVisible(AddonBrowser.xml) + !String.IsEmpty({listitemposition}.AddonBroken)">indicator/broken.png</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.orphaned)">indicator/orphaned.png</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.downloading)">indicator/download.png</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.isinstalled) + !{listitemposition}.Property(addon.isenabled)">indicator/disabled.png</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.hasupdate)">indicator/update.png</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.isinstalled)">indicator/library.png</value>

    </variable>

    <variable name="Image_Overlay_Backing" containers="50">
        <!-- Unwatched Episodes -->
        <value condition="[String.IsEqual({listitemposition}.DBType,tvshow) | String.IsEqual({listitemposition}.DBType,season) | String.IsEqual({listitemposition}.DBType,episode)] + !Integer.IsEqual({listitemposition}.Property(UnWatchedEpisodes),0) + !Skin.HasSetting(Indicator.DisableEpisodes)">indicator/circle</value>

        <!-- PVR Timers / Recording -->
        <value condition="{listitemposition}.IsRecording">indicator/circle</value>
        <value condition="{listitemposition}.HasTimer">indicator/circle</value>

        <!-- Progress / Resume -->
        <value condition="[{listitemposition}.IsResumable | [!Integer.IsEqual({listitemposition}.Progress,0) + $EXP[Exp_WidgetWindow]]] + !Skin.HasSetting(Indicator.DisableProgress)">indicator/circle</value>

        <!-- Watched -->
        <value condition="String.IsEqual({listitemposition}.Overlay,OverlayWatched.png) + !Skin.HasSetting(Indicator.DisableWatched)">indicator/circle</value>
        <value condition="Integer.IsGreater({listitemposition}.PlayCount,0) + !String.IsEqual({listitemposition}.DBType,song) + !String.IsEqual({listitemposition}.DBType,album) + !String.IsEqual({listitemposition}.DBType,artist) + !String.IsEqual({listitemposition}.DBType,image) + !String.IsEqual({listitemposition}.DBType,addon) + !Skin.HasSetting(Indicator.DisableWatched)">indicator/circle</value>

        <!-- New Movie -->
        <value condition="String.IsEqual({listitemposition}.Overlay,OverlayUnwatched.png) + String.IsEqual({listitemposition}.DBType,movie) + [String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.1.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.2.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.3.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.4.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.5.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.6.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.7.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.8.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.9.Title)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestMovie.10.Title))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/circle</value>

        <!-- New Episode -->
        <value condition="String.IsEqual({listitemposition}.Overlay,OverlayUnwatched.png) + String.IsEqual({listitemposition}.DBType,episode) + [String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.1.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.2.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.3.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.4.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.5.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.6.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.7.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.8.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.9.EpisodeTitle)) | String.IsEqual({listitemposition}.Title,Window(Home).Property(LatestEpisode.10.EpisodeTitle))] + !Skin.HasSetting(Indicator.DisableLatest)">indicator/circle</value>

        <!-- Is Library DBID -->
        <value condition="!String.IsEmpty({listitemposition}.Property(Item.Info)) + !String.IsEmpty({listitemposition}.DBID) + !Skin.HasSetting(Indicator.DisableLibrary)">indicator/circle</value>

        <!-- Is Collection -->
        <value condition="{listitemposition}.IsCollection + !Skin.HasSetting(Indicator.DisableCollection)">indicator/circle</value>

        <!-- Add-on Status -->
        <value condition="Window.IsVisible(AddonBrowser.xml) + !String.IsEmpty({listitemposition}.AddonBroken)">indicator/circle</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.orphaned)">indicator/circle</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.downloading)">indicator/circle</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.isinstalled) + !{listitemposition}.Property(addon.isenabled)">indicator/circle</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.hasupdate)">indicator/circle</value>
        <value condition="Window.IsVisible(AddonBrowser.xml) + {listitemposition}.Property(addon.isinstalled)">indicator/circle</value>
    </variable>
</includes>